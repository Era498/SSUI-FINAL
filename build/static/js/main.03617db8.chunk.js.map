{"version":3,"sources":["img/logo.png","components/NavBar.js","components/Footer.js","components/CountryDropdown.js","components/Loader.js","components/Instructions.js","containers/New.js","img/landingImage.jpg","img/SIR-unscreen.gif","img/country.png","containers/Home.js","d3/Color.js","d3/DrawBar.js","d3/Viz.js","components/Country.js","containers/Show.js","containers/Collection.js","d3/DrawLine.js","d3/Visual.js","components/Countries.js","containers/Overlay.js","App.js","reducers/countryDataReducer.js","reducers/rootReducer.js","reducers/cacheReducer.js","reducers/countriesReducer.js","reducers/collectionReducer.js","index.js"],"names":["NavBar","className","to","id","src","Logo","alt","class","Component","Footer","CountryDropdown","props","countries","useSelector","state","collection","dispatch","useDispatch","invalid","length","onChange","event","target","value","split","slug","country","ISO2","a","requestOptions","method","redirect","fetch","response","json","data","parsedData","filter","day","Confirmed","type","payload","fetchData","fetchCountry","placeholder","sort","b","Country","map","Slug","key","disabled","index","flagUrl","toLowerCase","worldUrl","onError","e","Loader","Instructions","New","useState","isLoading","setIsLoading","useEffect","Home","FrontImg","SIR","color","caseType","DrawBar","countryName","totalCases","dailyData","console","log","string","width","height","margin","innerWidth","vizName","yAxisLabel","charAt","toUpperCase","slice","title","xScale","scaleBand","domain","d","dayCount","range","padding","yScale","scaleLinear","max","tip","line","x","y","curve","curveMonotoneX","d3Tip","attr","offset","html","toLocaleString","date","toLocaleDateString","total","active","recovered","deaths","svg","select","append","xAxisG","selectAll","join","bandwidth","on","show","hide","call","g","axisBottom","tickValues","i","text","remove","yAxisG","axisLeft","ticks","format","tickSize","titleG","Viz","Object","keys","find","obj","pathname","array","forEach","newCases","newDeaths","Deaths","push","Date","Active","Recovered","daily","daily_deaths","parseData","Show","name","location","countryData","findIndex","setCaseType","Row","Col","xs","sm","md","lg","xl","onClick","style","Card","Collection","autofocus","preventDefault","DrawLine","names","slugs","l","idx","indexOf","Math","apply","l2","m","dat","largest","lineGenerator","datum","toString","Visual","Countries","res","slug_res","Overlay","App","basename","process","Container","fluid","exact","path","render","routerProps","component","countryDataReducer","action","rootReducer","combineReducers","cache","concat","countryReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.03617db8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4f8bccbb.png\";","import React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport Logo from \"../img/logo.png\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n\n// const NavBar = () => {\n  render() {\n  return (\n    <div>\n      <div className=\"topbar\"></div>\n        <br />\n        <br/>\n\n      <div className=\"container-fluid\">\n          <div className=\"row mx-n5\">\n              <div className=\"col-3\">\n                  <NavLink to=\"/\">\n                      <img id=\"logo\" src={Logo} className=\"mx-auto d-block\" alt=\"Logo\" />\n                  </NavLink>\n              </div>\n              <div className=\"col-1\"> </div>\n              <div className=\"col-8\">\n                  <br />\n                  <h1 id=\"title\"> <b> Interactive Visualizations of COVID-19 </b> </h1>\n              </div>\n          </div>\n          <br/>\n          <br/>\n          <nav class=\"navbar navbar-expand-lg navborder\">\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul class=\"navbar-nav-front\">\n                <li class=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/\">\n                    Covid SIR Model\n                  </NavLink>\n                </li>\n                <li class=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/new\">\n                    Country Data\n                  </NavLink>\n                </li>\n                <li class=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/\">\n                    What you can do \n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n          </nav>\n\n          <br/>\n  \n      </div>\n    </div>\n\n    \n  )}\n};\n\nexport default NavBar;","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n\n// const NavBar = () => {\n  render() {\n  return (\n      <div className=\"bottombar\">\n          <div className=\"container-fluid\">\n              <div className=\"row footer\">\n                  <div className=\"col footer\">\n                      <p className=\"footer\"> Copyright @ 2020 - All Rights Reserved </p>\n                  </div>\n                  <div className=\"col footer\"></div>\n                  <div className=\"col footer\">\n                      <p className=\"footer\"> Designed by Erin Beasley and Ginny Zhao</p>\n                  </div>\n\n              </div>\n          </div>\n      </div>\n\n    \n  )}\n};\n\nexport default Footer;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { NavLink } from 'react-router-dom';\nimport \"./CountryDropdown.css\";\nimport Delete from \"../img/delete.png\";\n\nconst CountryDropdown = (props) => {\n\n    const countries = useSelector(state => state.countries)\n    const collection = useSelector(state => state.collection)\n    const dispatch = useDispatch()\n    let display = true;\n\n\n// Fetch specific country covid data based on user's choice in the select option\n    const fetchCountry = (event) => {\n        const [slug, country, ISO2] = event.target.value.split(\",\") \n\n        async function fetchData() {\n\n            const requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            \n            const response = await fetch(`https://api.covid19api.com/total/country/` + slug, requestOptions)\n\n            const data = await response.json()\n            const parsedData = data.filter(day => day.Confirmed > 0)\n\n            dispatch( { type: 'addCountryData', payload: { [country]: parsedData }} )\n            dispatch( { type: 'addCountryToCollection', payload: {slug, country, ISO2}} )\n        }\n        fetchData();\n    }\n\n    const invalid = () => collection.length === 0\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-lg-3\">\n\n                <h6 className=\"instruction\"> Select country to display: </h6>\n\n                <select class=\"dropdown\" onChange={event => fetchCountry(event)}>\n                \n                    <option placeholder=\"Countries\"> Countries </option>\n                    {countries.sort((a, b) => (a.Country > b.Country) ? 1 : -1).map(country => (\n                        <option\n                            id={country.Slug}\n                            key={country.Slug}\n                            value={[country.Slug, country.Country, country.ISO2]}\n                        >\n                        {country.Country}\n                        </option> \n                    ))}\n                </select>\n\n                <NavLink to='/collection'>\n                    <button className=\"dark\" disabled={invalid()}>View side-by-side plot</button>\n                </NavLink>\n                \n                <NavLink to=\"/overlay\">\n                    <button className=\"dark\" disabled={invalid()}> View overlay plot </button>\n                </NavLink>\n                {/* <button className=\"dark\" disabled={invalid()} onClick={() => {display = false}}> Reset </button> */}\n            </div>\n\n            <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                <div className=\"countries\">\n                {collection.map( (country, index) => {\n                    const flagUrl = `https://disease.sh/assets/img/flags/${country.ISO2.toLowerCase()}.png`\n                    // const flagUrl = `https://www.countryflags.io/${country.ISO2.toLowerCase()}/flat/64.png`\n                    // const flagUrl = `https://flagcdn.com/256x192/${country.ISO2.toLowerCase()}.png`\n                    const worldUrl = `https://freesvg.org/img/Globe-Icon-Umber.png`\n\n                    return (\n\n                            <div className={display ? \"country\" : \"none\"}>\n                                <img className=\"flag\" key={country.slug} src={flagUrl} onError={(e)=>{ \n                                    if (e.target.src !== worldUrl) {\n                                        e.target.src=worldUrl;}\n                                    }}/>\n                                <h5 className=\"countryName\">{country.country}</h5>\n                                {/* <button className=\"delete\" onClick={() => {collection.splice(index, 1)}}> Delete </button> */}\n                            </div>\n                    )\n                })}\n                </div>\n            </div>\n\n            </div>\n\n    )\n}\n\nexport default CountryDropdown\n\n\n","import React from 'react';\n\nexport const Loader = () => {\n    return (                 \n        <button className=\"dark\">LOADING DATA...</button>\n    )\n}\n","import React from 'react';\n\nexport const Instructions = () => {\n    return (                 \n        <h3> Instructions </h3>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport CountryDropdown from '../components/CountryDropdown'\nimport { Loader } from '../components/Loader'\nimport { useDispatch } from \"react-redux\";\nimport { Instructions } from '../components/Instructions';\n\nconst New = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch()\n\n    // fetch basic country data including name, slug and code from Coronavirus COVID19 API\n    useEffect( () => {\n        async function fetchData() {\n            setIsLoading(true);\n\n            var requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n              };\n            const response = await fetch(\"https://api.covid19api.com/countries\", requestOptions)\n            const data = await response.json()\n            dispatch({ type: 'addCountries', payload: data })\n            setIsLoading(false);\n        }\n        fetchData();\n    }, []); \n\n    return (\n\n        <div>\n            <Instructions />\n\n            {isLoading ? (\n                < Loader />\n            ) : (\n                < CountryDropdown />\n            )}\n        </div>\n    )\n}\n\nexport default New","export default __webpack_public_path__ + \"static/media/landingImage.8d52b0c6.jpg\";","export default __webpack_public_path__ + \"static/media/SIR-unscreen.0bb41694.gif\";","export default __webpack_public_path__ + \"static/media/country.5c1bfd96.png\";","// doesn't require redux\n\n// import React, { useEffect } from 'react';\n\n// import DrawMap from '../d3/DrawMap'\n// import MapInput from '../components/MapInput'\n\n// import { Row } from 'react-bootstrap'\n// import { Col } from 'react-bootstrap'\n// import { Card } from 'react-bootstrap'\nimport React, { Component,} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FrontImg from \"../img/landingImage.jpg\";\nimport SIR from \"../img/SIR-unscreen.gif\";\nimport \"./Home.css\";\nimport Country from \"../img/country.png\";\n\n\n\n// const Home = () => {\n\n//     useEffect( () => {\n//         DrawMap(); \n//     }, [])\n\n//     return (\n//         <Row>\n//             <Col sm=\"12\" md=\"3\" lg=\"3\" xl=\"3\">\n//                 <Card>\n//                     <MapInput />\n//                 </Card>\n//             </Col>\n//             <Col sm=\"12\" md=\"9\" lg=\"9\" xl=\"9\" >\n//                 <Card className=\"mapviz\">\n\n//                 </Card>\n//             </Col>\n//         </Row>\n//     )\n// }\n\n// export default Home\n\n\nclass Home extends Component {\n    render () {\n        return (\n            <div className=\"Home\">\n                <div className=\"Banner\">\n                    <img src={FrontImg} alt=\"Homepage\" />\n                </div>\n                <br />\n                <br />\n                <h3 className=\"text\"> <b> Welcome to our COVID-19 data visualizations portal! </b></h3>\n                <br/>\n                <p className=\"text\"> With the on-going pandemic, the world is under uncertainty of COVID-19. We have faced a stress in health care system, an economic recession and panic feeling. Many people are terrified of the pandemic, and it might be very hard to face the current situation. Therefore, our goal is to develop a platform that provide interactive visualizations that would help users to have a better understanding of this pandemic. We offer an interactive COVID SIR model for spread of disease where the users can simulate the spread with differnt conditions. We also provide graphs that allow users to explore and compare the COVID-19 outbreak at a global scale. Also remember to check out our \"What you can do\" page for tips that would help protect yourselves and your loved ones.\n                </p>\n\n                <br/>\n                <br/>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-4 left\">\n                            <img id=\"SIR\" src={SIR} alt=\"SIR gif\"/>\n                        </div>\n                        <div className=\"col-8 right\">\n                            <h4 className=\"card\"> COVID SIR Model</h4>\n                            <h5 className=\"card\"> How it works </h5>\n                            <p className=\"card\"> We created a network SIR (susceptible, infected, recovered) model to display small-scale COVID transmission. This agent-based, mechanistic version of the SIR model visualizes close connections by linking nodes together, and probabilistically chooses neighbor nodes to infect. Because COVID transmission is hard to predict, we made the infection and recovery rate editable.In addition, connections and node states can be changed. </p>\n                            <Link\n                                key=\"1\"\n                                to=\"/\">\n                                <button className=\"homeButton\"> Explore our SIR Model </button>\n                            </Link>\n                        </div>\n                    </div>\n                    <br/>\n                    <br/>\n\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-8 left\">\n                            <h4 className=\"card\"> COVID-19 Cases by Country</h4>\n                            <h5 className=\"card\"> How it works </h5>\n                            <p className=\"card\"> Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. </p>\n                            <Link\n                                key=\"1\"\n                                to=\"/new\">\n                                <button className=\"homeButton\"> Explore COVID Cases by Country </button>\n                            </Link>\n                        </div>\n                        <div className=\"col-4 right\">\n                            <img id=\"country\" src={Country} alt=\"country data\"/>\n                        </div>\n                    </div>\n                    <br/>\n                    <br/>\n\n                </div>\n\n\n\n\n\n\n            </div>\n\n        )\n    }\n}\n\nexport default Home;","export const color = (caseType) => {\n    switch (caseType) {\n        case \"cases\":\n            return \"#306FAA\"\n        case \"recovered\":  \n            return \"#3AA65F\"\n        case \"active\":\n            return \"#DEBB3D\"\n        case \"deaths\":\n            return \"#992222\"\n        case \"daily\":\n            return \"#CB7B7B\"\n        case \"daily_deaths\":\n            return \"#978AE3\"\n        default:\n            return \"#306FAA\"\n    }\n}","import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\n// import * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport { color } from './Color'\n\nconst DrawBar = (countryName, totalCases, dailyData, id, caseType) => {\n    console.log(dailyData)\n\n    caseType ? caseType = caseType : caseType = \"total\"\n\n    // captilize the first character\n    function capFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    // setting up constants for sizes\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 0, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    // const innerHeight = height - margin.top - margin.bottom;\n    const vizName = \"viz\" + id\n\n    // setting constants for text labels and title\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\"\n    const title = countryName\n    const subtitle = () => {\n        if (dailyData.length > 0) {\n            return totalCases.toLocaleString('en') + \" COVID-19 Cases Reported Since \" + dailyData[0].date.toLocaleDateString()\n        } else {\n            return totalCases + \" COVID-19 Cases Reported\"\n        }\n    }\n\n    const xScale = scaleBand()\n        .domain(dailyData.map(d => d.dayCount))\n        .range([margin.left, width - margin.right])\n        .padding(padding)\n\n    const yScale = scaleLinear()\n        .domain([0, max(dailyData, d => d[`${caseType}`])])\n        .range([height - margin.bottom, margin.top])\n\n    const lineGenerator = line()\n      .x(d =>  xScale(d.dayCount))\n      .y(d =>  yScale(d[`${caseType}`]))\n      .curve(curveMonotoneX);\n\n    const xAxis = (g) => {\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(axisBottom(xScale)\n        .tickValues(xScale.domain().filter(function(d,i){ return !(((i+1)%10))})))\n\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dailyData.dayCount))\n    }\n\n    const yAxis = (g) => {\n        g.attr(\"transform\", `translate(${margin.left},0)`)\n        .call(axisLeft(yScale).ticks(null, dailyData.format).tickSize(-innerWidth))\n            \n            .call(g => g.select(\".domain\").remove())\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dailyData.total))\n    }\n\n\n    // setting up tooltip with data labels\n    const tip = d3Tip()\n        .attr('class', 'd3-tip')\n        .offset([-10, 0])\n        .html(function(d) {\n            return \"<p>\" + \"<span style='color:white'>\" + \"Day \" + d.dayCount.toLocaleString('en') + \"<br/>\" +\n                d.date.toLocaleDateString() + \"<br/>\" + \"</span>\" +\n                \"<span style='color:#BD2D28'>\" + d.total.toLocaleString('en') + \" Total\" + \"<br/>\" + \"</span>\" +\n                \"<span style='color:#E3BA22'>\" + d.active.toLocaleString('en') + \" Active\" + \"<br/>\" + \"</span>\" +\n                \"<span style='color:#A0B700'>\" + d.recovered.toLocaleString('en') + \" Recovered\" + \"<br/>\" + \"</span>\" +\n                \"<span style='color:#BA5F06'>\" + d.deaths.toLocaleString('en') + \" Deaths\" + \"</p>\" \n        })\n        \n\n\n\n\n    \n\n\n\n    // setting up svg element on card\n    const svg = select(`.${vizName}`)\n        .append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n        .attr(\"viewBox\", [0, 0, width, height])\n\n    const g = svg.append(\"g\")\n        .attr(\"fill\", color(caseType))\n        .selectAll('rect')\n        .data(dailyData)\n        .join(\"rect\")\n        .attr('x', d => xScale(d.dayCount))\n\n        .attr(\"y\", d => yScale(d[`${caseType}`]))\n        .attr(\"width\", xScale.bandwidth())\n        .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n        .attr(\"class\", \"bar\")\n        .on('mouseover', tip.show)\n        .on('mouseout', tip.hide)\n\n    \n\n    // const g = svg.append('path')\n    //     .attr(\"fill\", \"none\")\n    //     .datum(dailyData)\n    //     // .attr('x', d => xScale(d.dayCount))\n\n    //     .attr('stroke', color(caseType))\n    //     .attr('stroke-width', 2)\n    //     .attr('class', 'line') \n    //     .attr('d', lineGenerator)\n        // .attr(\"y\", d => yScale(d[`${caseType}`]))\n        // .attr(\"width\", xScale.bandwidth())\n        // .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n\n    // const s = svg.append('path')\n    //     .attr(\"fill\", \"none\")\n    //     .datum(dailyData)\n    //     // .attr('x', d => xScale(d.dayCount))\n\n    //     .attr('stroke', color(caseType))\n    //     .attr('stroke-width', 2)\n    //     .attr('class', 'line') \n    //     .attr('d', lineGenerator)\n\n\n    const xAxisG = svg.append('g')\n        .call(xAxis)\n        \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 45)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel)\n\n\n\n\n\n\n\n    const yAxisG = svg.append('g')\n        .call(yAxis)\n        \n    yAxisG.select('.domain').remove();\n    \n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -height / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n\n\n\n    const titleG = svg.append(\"g\")\n\n    titleG.append('text')\n        .attr('class', 'title')\n        .attr('x', width / 2)\n        .attr('y', 40)\n        .attr('text-anchor', 'middle')\n        .text(title);\n\n    titleG.append('text')\n        .attr('class', 'subtitle')\n        .attr('x', width / 2)\n        .attr('y', 70)\n        .attr('text-anchor', 'middle')\n        .text(subtitle());\n\n    svg.call(tip);\n\n}\n\n\n\n\nexport default DrawBar","import React, { useEffect } from 'react';\nimport DrawBar from './DrawBar'\n\nconst Viz = ( {caseType, countryName, totalCases, dailyData, slug}) => {\n\n    useEffect( () => {\n\n        DrawBar(countryName, totalCases, dailyData, slug, caseType)\n    }, [caseType])\n\n    return (\n        <div className={\"viz\" + slug} ></div>\n    )\n}\n\nexport default Viz","import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\nconst Country = ({caseType, country}) => {\n    const collection = useSelector(state => state.collection)\n    console.log(country)\n    const countryName = Object.keys(country)[0]\n    console.log(countryName)\n    const dailyData = country[countryName]\n    console.log(dailyData)\n    // console.log(collection.find(obj => obj.country === countryName)  == null)\n    console.log(collection.find(obj => obj.country === countryName)  != null)\n    if (collection.find(obj => obj.country === countryName) != null) {\n        console.log(\"hi\")\n        const slug = collection.find(obj => obj.country === countryName).slug\n        const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n    \n        const array = []\n        const parseData = (data, array) => {\n            data.forEach( (day, index) => {\n                let newCases = 0;\n                let newDeaths = 0;\n                if (index === 0) {\n                    newCases = 0;\n                    newDeaths = 0;\n                } else {\n                    newCases = day.Confirmed - data[index-1].Confirmed;\n                    newDeaths = day.Deaths - data[index-1].Deaths;\n\n                }\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths,\n                    daily: newCases,\n                    daily_deaths: newDeaths,\n                })\n            })\n            console.log(array);\n            return array\n        }\n\n        // console.log(parseData(dailyData, array))\n    \n        return (\n            <NavLink to={{\n                pathname: `/countries/${slug}`,\n                slug,\n                countryName\n                }}>\n                <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n            </NavLink>\n        )\n    }\n}\n\nexport default Country\n\n","// need to add loader logic\nimport data from '../components/data/data.json'\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Province from '../components/Province'\nimport State from '../components/State'\nimport Country from '../components/Country'\n\nimport { Card } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\n\nimport { selectAll } from 'd3'\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst Show = (props) => {\n    // const cache = useSelector(state => state.cache)\n    // const collection = useSelector(state => state.collection)\n    console.log(props);\n    const name = props.location.countryName;\n    // let nameCap = name.charAt(0).toUpperCase() + name.slice(1)\n    // if (nameCap === \"United-states\") {\n    //     nameCap = \"United States of America\";\n    // }\n    // if (nameCap === \"Korea-south\") {\n    //     nameCap = \"Korea (South)\"\n    // }\n\n    const countryData = useSelector(state => state.countryData)\n    // let index = 0;\n    // console.log(nameCap)\n    // console.log(Object.keys(countryData[0])[0])\n\n    let index = countryData.findIndex(obj => Object.keys(obj)[0] === name);\n    console.log(index);\n\n    const [caseType, setCaseType] = useState(\"\");\n        return (\n            <div>\n                <Row >\n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"3\">\n                        <div className=\"card button-col\">\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/collection'>\n                            <button className=\"dark\" style={{\"font-size\": \"16px\"}}> Back to side-by-side View </button>\n                        </NavLink>\n                    </Col>\n\n                    <Col sm=\"12\" md=\"9\" lg=\"9\" xl=\"9\">\n                        <Card>\n                            <NavLink to='/collection'>\n                                <Country caseType={caseType} country={countryData[index]}/>\n                                {/* <Province caseType={caseType} province={provincesData[0].Country} provinceData={provincesData}/>  */}\n                            </NavLink>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n}\n\nexport default Show","import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Country from '../components/Country'\nimport { selectAll } from 'd3'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport \"./Collection.css\"\n\n\nconst Collection = () => {\n    const countryData = useSelector(state => state.countryData)\n    const [caseType, setCaseType] = useState(\"\");\n\n    if (countryData) {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-3\">\n                        <div className='card button-col'>\n                            <button autofocus onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove(), event.preventDefault())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/new'>\n                            <button className=\"dark\"> Back to Main </button>\n                        </NavLink>\n                    </div>\n\n                    <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                        <div className=\"countries\">\n                            {countryData.map((country, index) => { \n                                return (\n                                    <div className=\"country\">\n                                        <Country caseType={caseType} country={country}/>  \n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/' />\n        // return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n\n    }\n}\n\nexport default Collection\n","import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { color } from './Color'\nimport \"./DrawLine.css\"\n\n\n\n\nconst DrawLine = (names, data, slugs, caseType) => {\n    console.log(names)\n    console.log(data)\n    console.log(slugs)\n    caseType ? caseType = caseType : caseType = \"total\";\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 80, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    const vizName = \"viz\"\n\n\n    function capFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\"\n    const title = \"COVID-19 Cases\"\n\n    let l =[] \n    data.map((d,idx) => {\n        l.push(d.length)\n    })\n\n    const i = l.indexOf(Math.max.apply(Math, l))\n    // console.log(l)\n    // console.log(i)\n\n    console.log(data[i])\n\n    const xScale = scaleBand()\n        .domain(data[i].map(d => d.dayCount))\n        .range([margin.left, width - margin.right])\n        .padding(padding)\n    \n    let l2 = []\n    let m = 0\n    data.map((dat,idx) =>  {\n        m = max(dat, d => d[`${caseType}`])\n        l2.push(m)\n    })\n    console.log(l2)\n    const largest = Math.max.apply(Math, l2)\n    console.log(largest)\n\n\n    const yScale = scaleLinear()\n        .domain([0, largest])\n        .range([height - margin.bottom, margin.top])\n\n\n    const svg = select(`.${vizName}`)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n    .attr(\"viewBox\", [0, 0, width, height])\n\n    data.map((dat, idx) => {\n        console.log(dat[dat.length-1])\n        console.log(dat[dat.length-1][caseType])\n        const lineGenerator = line()\n        .x(d =>  xScale(d.dayCount))\n        .y(d =>  yScale(d[`${caseType}`]))\n        .curve(curveMonotoneX);\n\n        const s = svg.append('path')\n        .attr(\"fill\", \"none\")\n        .datum(dat)\n        // .attr('stroke', `#${((1<<24)*Math.random()|0).toString(16)}`)\n        .attr('stroke', color(caseType))\n\n        .attr(\"class\", `line country${(idx + 1).toString()}`)\n        .attr('stroke-width', 2)\n        .attr('class', 'line') \n        .attr('d', lineGenerator)\n\n        const t = svg.append('text')\n        .text(names[idx])\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"transform\", `translate(${width - 100}, ${yScale(dat[dat.length-1][caseType])+10})`)\n\n\n\n\n\n\n    })\n\n    const xAxis = (g) => {\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(axisBottom(xScale)\n        .tickValues(xScale.domain().filter(function(d,i){ return !(((i+1)%10))})))\n\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(data[i].dayCount))\n    }\n\n\n    const xAxisG = svg.append('g')\n        .call(xAxis)\n        \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 45)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel)\n\n\n    const yAxis = (g) => {\n        g.attr(\"transform\", `translate(${margin.left},0)`)\n        .call(axisLeft(yScale).ticks(null, data[i].format).tickSize(-innerWidth))\n            \n            .call(g => g.select(\".domain\").remove())\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(data[i].total))\n    }\n\n\n    const yAxisG = svg.append('g')\n    .call(yAxis)\n    \n    yAxisG.select('.domain').remove();\n\n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -height / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n\n\n\n    const titleG = svg.append(\"g\")\n\n    titleG.append('text')\n        .attr('class', 'title')\n        .attr('x', width / 2)\n        .attr('y', 40)\n        .attr('text-anchor', 'middle')\n        .text(title);\n\n\n\n\n\n}\n\n\nexport default DrawLine","import React, { useEffect } from 'react';\nimport DrawLine from './DrawLine'\n\nconst Visual = ( {names, data, caseType, slugs}) => {\n\n    useEffect( () => {\n\n        DrawLine(names, data, slugs, caseType)\n    }, [caseType])\n\n    return (\n        <div className={\"viz\"} ></div>\n    )\n}\n\nexport default Visual","import React from 'react';\nimport Visual from '../d3/Visual'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\nconst Countries = ({caseType, countries}) => {\n    const collection = useSelector(state => state.collection)\n    const res =  []\n    const slug_res = []\n    const names = []\n\n\n    countries.map((country, idx) => {\n        const countryName = Object.keys(country)[0]\n        const dailyData = country[countryName]       \n        const slug = collection.find(obj => obj.country === countryName).slug\n\n        const array = []\n        const parseData = (data, array) => {\n            data.forEach( (day, index) => {\n                let newCases = 0;\n                let newDeaths = 0;\n                if (index === 0) {\n                    newCases = 0;\n                    newDeaths = 0;\n                } else {\n                    newCases = day.Confirmed - data[index-1].Confirmed;\n                    newDeaths = day.Deaths - data[index-1].Deaths;\n\n                }\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths,\n                    daily: newCases,\n                    daily_deaths: newDeaths,\n                })\n            })\n            console.log(array);\n            return array\n        }\n        res.push(parseData(dailyData, array));\n        slug_res.push(slug);\n        names.push(countryName);\n    })\n\n    console.log(res)\n    console.log(slug_res)\n\n    return (\n        <Visual names = {names} data = {res} caseType = {caseType} slugs = {slug_res}/>\n    )\n\n    // const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n\n    \n\n    // return (\n    //     <NavLink to={{\n    //         pathname: `/countries/${slug}`,\n    //         slug,\n    //         countryName\n    //         }}>\n    //         <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n    //     </NavLink>\n    // )\n}\n\nexport default Countries\n\n","import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Countries from '../components/Countries'\nimport { selectAll } from 'd3'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\n\nconst Overlay = () => {\n    const countryData = useSelector(state => state.countryData)\n    console.log(countryData)\n    const [caseType, setCaseType] = useState(\"\");\n\n    if (countryData) {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-3\">\n                        <div className='card button-col'>\n                            <button autofocus onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/new'>\n                            <button className=\"dark\"> Back to Main </button>\n                        </NavLink>\n                    </div>\n\n                    <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                        <Countries caseType={caseType} countries={countryData}/>  \n                            {/* {countryData.map((country, index) => { \n                                return (\n                                    <div className=\"country\">\n                                            <Countries caseType={caseType} countries={countryData}/>  \n                                    </div>\n                                )\n                            })} */}\n                    </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/' />\n        // return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n\n    }\n}\n\nexport default Overlay\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport New from './containers/New'\nimport Home from './containers/Home'\nimport Show from './containers/Show'\nimport Collection from './containers/Collection'\nimport Container from 'react-bootstrap/Container';\nimport Overlay from './containers/Overlay';\n// import Simulation from './containers/Simulation';\n\nfunction App() {\n  return (    \n      <Router basename={process.env.PUBLIC_URL}>\n        <Container fluid >\n          <div >\n            <NavBar />\n            <Route exact path={`/`} render={ (routerProps) => <Home routerProps={routerProps}/>}/>\n            <Route exact path=\"/countries/:slug\" component={Show} />\n            <Route exact path={`/new`} component={New} />\n            <Route exact path={`/collection`} component={Collection} />\n            <Route exact path={`/overlay`} component={Overlay} />\n            {/* <Route exact path={`/simulation`} component={Simulation} /> */}\n            <Footer />\n          </div>\n        </Container>\n      </Router>\n  );\n}\n\nexport default App\n\n","export default function countryDataReducer(state = [], action) {\n    switch (action.type) {\n\n        case 'addCountryData':\n            return [...state, action.payload]\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\n\nimport countriesReducer from './countriesReducer'\nimport collectionReducer from './collectionReducer'\nimport countryDataReducer from './countryDataReducer'\nimport countryReducer from './countryDataReducer'\n// import provincesDataReducer from './provincesDataReducer'\nimport cacheReducer from './cacheReducer'\n\n\n\n\n\nconst rootReducer = combineReducers({\n    cache: cacheReducer,\n    countries: countriesReducer,\n    collection: collectionReducer,\n    countryData: countryDataReducer, \n    country: countryReducer,\n    // provincesData: provincesDataReducer\n});\n\nexport default rootReducer","export default function cacheReducer(state = [], action) {\n    switch (action.type) {\n        case 'cacheData':\n            const slug = action.payload.slug\n            const data = action.payload.data\n            return {...state, [slug]: data }\n        case 'addToCachedData':\n            console.log(action.payload)\n            return {...state, \"united-states\": [...state[\"united-states\"].concat(action.payload)]}\n        default:\n            return state\n    }\n}","export default function countriesReducer(state = [], action) {\n    switch (action.type) {\n        case 'addCountries':\n            return [...action.payload]\n        default:\n            return state\n    }\n}","export default function collectionReducer(state = [], action) {\n    switch (action.type) {\n\n        case 'addCountryToCollection':\n            return [...state, action.payload]\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n  ));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}