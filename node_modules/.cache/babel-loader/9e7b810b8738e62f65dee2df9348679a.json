{"ast":null,"code":"import React from 'react';\nimport Viz from '../d3/Viz';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nconst Countries = ({\n  caseType,\n  countries\n}) => {\n  const collection = useSelector(state => state.collection);\n  const res = [];\n  const slug_res = [];\n  countries.map((country, idx) => {\n    const countryName = Object.keys(country)[0];\n    const dailyData = country[countryName];\n    const slug = collection.find(obj => obj.country === countryName).slug;\n    const array = [];\n\n    const parseData = (data, array) => {\n      data.forEach((day, index) => {\n        let newCases = 0;\n        let newDeaths = 0;\n\n        if (index === 0) {\n          newCases = 0;\n          newDeaths = 0;\n        } else {\n          newCases = day.Confirmed - data[index - 1].Confirmed;\n          newDeaths = day.Deaths - data[index - 1].Deaths;\n        }\n\n        array.push({\n          dayCount: index + 1,\n          date: new Date(day.Date),\n          total: day.Confirmed,\n          active: day.Active,\n          recovered: day.Recovered,\n          deaths: day.Deaths,\n          daily: newCases,\n          daily_deaths: newDeaths\n        });\n      });\n      console.log(array);\n      return array;\n    };\n\n    res.push(parseData(dailyData, array));\n    slug_res.push(slug);\n  });\n  console.log(res);\n  console.log(slug_res);\n  return res; // const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n  // return (\n  //     <NavLink to={{\n  //         pathname: `/countries/${slug}`,\n  //         slug,\n  //         countryName\n  //         }}>\n  //         <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n  //     </NavLink>\n  // )\n};\n\nexport default Countries;","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/components/Countries.js"],"names":["React","Viz","useSelector","NavLink","Countries","caseType","countries","collection","state","res","slug_res","map","country","idx","countryName","Object","keys","dailyData","slug","find","obj","array","parseData","data","forEach","day","index","newCases","newDeaths","Confirmed","Deaths","push","dayCount","date","Date","total","active","Active","recovered","Recovered","deaths","daily","daily_deaths","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AACzC,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,GAAG,GAAI,EAAb;AACA,QAAMC,QAAQ,GAAG,EAAjB;AAGAJ,EAAAA,SAAS,CAACK,GAAV,CAAc,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC5B,UAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB,CAArB,CAApB;AACA,UAAMK,SAAS,GAAGL,OAAO,CAACE,WAAD,CAAzB;AACA,UAAMI,IAAI,GAAGX,UAAU,CAACY,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACR,OAAJ,KAAgBE,WAAvC,EAAoDI,IAAjE;AAEA,UAAMG,KAAK,GAAG,EAAd;;AACA,UAAMC,SAAS,GAAG,CAACC,IAAD,EAAOF,KAAP,KAAiB;AAC/BE,MAAAA,IAAI,CAACC,OAAL,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1B,YAAIC,QAAQ,GAAG,CAAf;AACA,YAAIC,SAAS,GAAG,CAAhB;;AACA,YAAIF,KAAK,KAAK,CAAd,EAAiB;AACbC,UAAAA,QAAQ,GAAG,CAAX;AACAC,UAAAA,SAAS,GAAG,CAAZ;AACH,SAHD,MAGO;AACHD,UAAAA,QAAQ,GAAGF,GAAG,CAACI,SAAJ,GAAgBN,IAAI,CAACG,KAAK,GAAC,CAAP,CAAJ,CAAcG,SAAzC;AACAD,UAAAA,SAAS,GAAGH,GAAG,CAACK,MAAJ,GAAaP,IAAI,CAACG,KAAK,GAAC,CAAP,CAAJ,CAAcI,MAAvC;AAEH;;AACDT,QAAAA,KAAK,CAACU,IAAN,CAAW;AACPC,UAAAA,QAAQ,EAAEN,KAAK,GAAG,CADX;AAEPO,UAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAST,GAAG,CAACS,IAAb,CAFC;AAGPC,UAAAA,KAAK,EAAEV,GAAG,CAACI,SAHJ;AAIPO,UAAAA,MAAM,EAAEX,GAAG,CAACY,MAJL;AAKPC,UAAAA,SAAS,EAAEb,GAAG,CAACc,SALR;AAMPC,UAAAA,MAAM,EAAEf,GAAG,CAACK,MANL;AAOPW,UAAAA,KAAK,EAAEd,QAPA;AAQPe,UAAAA,YAAY,EAAEd;AARP,SAAX;AAUH,OArBD;AAsBAe,MAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;AACA,aAAOA,KAAP;AACH,KAzBD;;AA0BAZ,IAAAA,GAAG,CAACsB,IAAJ,CAAST,SAAS,CAACL,SAAD,EAAYI,KAAZ,CAAlB;AACAX,IAAAA,QAAQ,CAACqB,IAAT,CAAcb,IAAd;AACH,GAlCD;AAoCAyB,EAAAA,OAAO,CAACC,GAAR,CAAYnC,GAAZ;AACAkC,EAAAA,OAAO,CAACC,GAAR,CAAYlC,QAAZ;AAEA,SACID,GADJ,CA7CyC,CAiDzC;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA9DD;;AAgEA,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\nconst Countries = ({caseType, countries}) => {\n    const collection = useSelector(state => state.collection)\n    const res =  []\n    const slug_res = []\n\n\n    countries.map((country, idx) => {\n        const countryName = Object.keys(country)[0]\n        const dailyData = country[countryName]       \n        const slug = collection.find(obj => obj.country === countryName).slug\n\n        const array = []\n        const parseData = (data, array) => {\n            data.forEach( (day, index) => {\n                let newCases = 0;\n                let newDeaths = 0;\n                if (index === 0) {\n                    newCases = 0;\n                    newDeaths = 0;\n                } else {\n                    newCases = day.Confirmed - data[index-1].Confirmed;\n                    newDeaths = day.Deaths - data[index-1].Deaths;\n\n                }\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths,\n                    daily: newCases,\n                    daily_deaths: newDeaths,\n                })\n            })\n            console.log(array);\n            return array\n        }\n        res.push(parseData(dailyData, array));\n        slug_res.push(slug);\n    })\n\n    console.log(res)\n    console.log(slug_res)\n\n    return (\n        res\n    )\n\n    // const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n\n    \n\n    // return (\n    //     <NavLink to={{\n    //         pathname: `/countries/${slug}`,\n    //         slug,\n    //         countryName\n    //         }}>\n    //         <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n    //     </NavLink>\n    // )\n}\n\nexport default Countries\n\n"]},"metadata":{},"sourceType":"module"}