{"ast":null,"code":"import React from'react';import Viz from'../d3/Viz';import{useSelector}from'react-redux';import{NavLink}from'react-router-dom';import{Loader}from'./Loader';var Province=function Province(_ref){var caseType=_ref.caseType,province=_ref.province,provinceData=_ref.provinceData;province?province=province:province=provinceData[0].Country;console.log(province);console.log(provinceData);var totalCases=function totalCases(){return provinceData.length===0?0:provinceData[provinceData.length-1].Confirmed;};var slug=function slug(province){return province.toString().trim().toLowerCase().replace(/\\s+/g,\"-\").replace(/[^\\w\\-]+/g,\"\").replace(/\\-\\-+/g,\"-\").replace(/^-+/,\"\").replace(/-+$/,\"\");};var array=[];var parseData=function parseData(provinceData,array){provinceData.forEach(function(day,index){array.push({dayCount:index+1,date:new Date(day.Date),total:day.Confirmed,active:day.Active,recovered:day.Recovered,deaths:day.Deaths});});return array;};if(provinceData){return/*#__PURE__*/ (// <NavLink to={{\n//     pathname: `/countries/${slug}`,\n//     slug\n//     }}>\nReact.createElement(Viz,{countryName:province,totalCases:totalCases(),dailyData:parseData(provinceData,array),caseType:caseType,slug:slug(province)})// </NavLink>\n);}else{return/*#__PURE__*/React.createElement(Loader,null);}};export default Province;","map":{"version":3,"sources":["/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Province.js"],"names":["React","Viz","useSelector","NavLink","Loader","Province","caseType","province","provinceData","Country","console","log","totalCases","length","Confirmed","slug","toString","trim","toLowerCase","replace","array","parseData","forEach","day","index","push","dayCount","date","Date","total","active","Active","recovered","Recovered","deaths","Deaths"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,WAAhB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OAASC,MAAT,KAAuB,UAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAwC,IAAtCC,CAAAA,QAAsC,MAAtCA,QAAsC,CAA5BC,QAA4B,MAA5BA,QAA4B,CAAlBC,YAAkB,MAAlBA,YAAkB,CACrDD,QAAQ,CAAGA,QAAQ,CAAGA,QAAd,CAAyBA,QAAQ,CAAGC,YAAY,CAAC,CAAD,CAAZ,CAAgBC,OAA5D,CACAC,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EACAG,OAAO,CAACC,GAAR,CAAYH,YAAZ,EACA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMJ,CAAAA,YAAY,CAACK,MAAb,GAAwB,CAAxB,CAA4B,CAA5B,CAAgCL,YAAY,CAACA,YAAY,CAACK,MAAb,CAAoB,CAArB,CAAZ,CAAoCC,SAA1E,EAAnB,CACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACR,QAAD,CAAc,CACvB,MAAOA,CAAAA,QAAQ,CACdS,QADM,GAENC,IAFM,GAGNC,WAHM,GAINC,OAJM,CAIE,MAJF,CAIU,GAJV,EAKNA,OALM,CAKE,WALF,CAKe,EALf,EAMNA,OANM,CAME,QANF,CAMY,GANZ,EAONA,OAPM,CAOE,KAPF,CAOS,EAPT,EAQNA,OARM,CAQE,KARF,CAQS,EART,CAAP,CASH,CAVD,CAYI,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACb,YAAD,CAAeY,KAAf,CAAyB,CACvCZ,YAAY,CAACc,OAAb,CAAsB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAClCJ,KAAK,CAACK,IAAN,CAAW,CACPC,QAAQ,CAAEF,KAAK,CAAG,CADX,CAEPG,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAASL,GAAG,CAACK,IAAb,CAFC,CAGPC,KAAK,CAAEN,GAAG,CAACT,SAHJ,CAIPgB,MAAM,CAAEP,GAAG,CAACQ,MAJL,CAKPC,SAAS,CAAET,GAAG,CAACU,SALR,CAMPC,MAAM,CAAEX,GAAG,CAACY,MANL,CAAX,EAQH,CATD,EAUA,MAAOf,CAAAA,KAAP,CACH,CAZD,CAcJ,GAAIZ,YAAJ,CAAkB,CAEd,oBACQ;AACA;AACA;AACA;AACI,oBAAC,GAAD,EAAK,WAAW,CAAED,QAAlB,CAA4B,UAAU,CAAEK,UAAU,EAAlD,CAAsD,SAAS,CAAES,SAAS,CAACb,YAAD,CAAeY,KAAf,CAA1E,CAAiG,QAAQ,CAAEd,QAA3G,CAAqH,IAAI,CAAES,IAAI,CAACR,QAAD,CAA/H,EACJ;AANR,EAQH,CAVD,IAUO,CACH,mBAAO,oBAAC,MAAD,MAAP,CACH,CACJ,CA7CD,CA+CA,cAAeF,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { Loader } from './Loader'\n\nconst Province = ({caseType, province, provinceData}) => {\n    province ? province = province : province = provinceData[0].Country\n    console.log(province)\n    console.log(provinceData)\n    const totalCases = () => provinceData.length === 0 ? 0 : provinceData[provinceData.length-1].Confirmed\n    const slug = (province) => {\n        return province\n        .toString()\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w\\-]+/g, \"\")\n        .replace(/\\-\\-+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n    }\n\n        const array = []\n        const parseData = (provinceData, array) => {\n            provinceData.forEach( (day, index) => {\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths\n                })\n            })\n            return array\n        }\n\n    if (provinceData) {\n\n        return (\n                // <NavLink to={{\n                //     pathname: `/countries/${slug}`,\n                //     slug\n                //     }}>\n                    <Viz countryName={province} totalCases={totalCases()} dailyData={parseData(provinceData, array)} caseType={caseType} slug={slug(province)}/>\n                // </NavLink>\n        )\n    } else {\n        return <Loader />\n    }\n}\n\nexport default Province"]},"metadata":{},"sourceType":"module"}