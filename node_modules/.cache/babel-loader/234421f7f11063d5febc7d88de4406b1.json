{"ast":null,"code":"var _jsxFileName = \"/Users/Ginny 1/SSUI-Final/src/components/MapInput.js\";\n// doesn't require redux\nimport React, { useState, useEffect } from 'react';\nimport DisplayMapData from '../d3/DisplayMapData';\nimport { Loader } from '../components/Loader';\n\nconst MapInput = () => {\n  const [countryResults, setCountryResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      const response = await fetch('https://corona.lmao.ninja/v2/countries');\n      const data = await response.json();\n      setCountryResults(data);\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, []); // logic for collapsing map choices\n  // let coll = document.getElementsByClassName(\"collapsible1\");\n  // let collButton = document.querySelector(\"button.collapsible1\")\n  // let i\n  // for (i = 0; i < coll.length; i++) {\n  //     coll[i].addEventListener(\"click\", function() {\n  //         this.classList.toggle(\"active\");\n  //         if (collButton.innerText === \"Open Map Menu\") {\n  //             collButton.innerText = \"Close Map Menu\"\n  //         } else {\n  //             collButton.innerText = \"Open Map Menu\"\n  //         }\n  //         var content = this.nextElementSibling;\n  //         if (content.style.display === \"none\") {\n  //           content.style.display = \"block\";\n  //         } else {\n  //           content.style.display = \"none\";\n  //         }\n  //     });\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }) :\n  /*#__PURE__*/\n  // )}\n  React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"cases block\",\n    value: \"cases\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Total Cases\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"casesPerOneMillion block\",\n    value: \"casesPerOneMillion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Total Cases Per Million\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"todayCases block\",\n    value: \"todayCases\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"New Cases Today\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"deaths block\",\n    value: \"deaths\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Total Deaths\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"deathsPerOneMillion block\",\n    value: \"deathsPerOneMillion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Deaths Per Million\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"todayDeaths block\",\n    value: \"todayDeaths\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"New Deaths Today\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"activee block\",\n    value: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Active Cases\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"activePerOneMillion block\",\n    value: \"activePerOneMillion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Active Cases Per Million\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"recovered block\",\n    value: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Recovered Cases\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"recoveredPerOneMillion block\",\n    value: \"recoveredPerOneMillion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Recovered Cases Per Million\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"critical block\",\n    value: \"critical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Critical Cases\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"criticalPerOneMillion block\",\n    value: \"criticalPerOneMillion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Critical Cases Per Million\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"tests block\",\n    value: \"tests\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Number of Tests\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"testsPerOneMillion block\",\n    value: \"testsPerOneMillion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Tests Per Million\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"population block\",\n    value: \"population\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => DisplayMapData(event.target.value, event.target.innerText, countryResults),\n    className: \"reset block\",\n    value: \"reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Reset Map\")));\n};\n\nexport default MapInput;","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/components/MapInput.js"],"names":["React","useState","useEffect","DisplayMapData","Loader","MapInput","countryResults","setCountryResults","isLoading","setIsLoading","fetchData","response","fetch","data","json","event","target","value","innerText"],"mappings":"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","sourcesContent":["// doesn't require redux\n\nimport React, { useState, useEffect } from 'react';\nimport DisplayMapData from '../d3/DisplayMapData'\nimport { Loader } from '../components/Loader'\n\nconst MapInput = () => {\n\n    const [countryResults, setCountryResults] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect( () => {\n        async function fetchData() {\n            setIsLoading(true);\n            const response = await fetch('https://corona.lmao.ninja/v2/countries')\n            const data = await response.json()\n            setCountryResults(data)\n            setIsLoading(false);\n        }\n        fetchData();\n    }, [])   \n    \n    // logic for collapsing map choices\n    // let coll = document.getElementsByClassName(\"collapsible1\");\n    // let collButton = document.querySelector(\"button.collapsible1\")\n    // let i\n\n    // for (i = 0; i < coll.length; i++) {\n    //     coll[i].addEventListener(\"click\", function() {\n    //         this.classList.toggle(\"active\");\n\n    //         if (collButton.innerText === \"Open Map Menu\") {\n    //             collButton.innerText = \"Close Map Menu\"\n    //         } else {\n    //             collButton.innerText = \"Open Map Menu\"\n    //         }\n            \n    //         var content = this.nextElementSibling;\n    //         if (content.style.display === \"none\") {\n    //           content.style.display = \"block\";\n    //         } else {\n    //           content.style.display = \"none\";\n    //         }\n    //     });\n    // }\n\n\n    return (\n        <div>\n            {/* loading */}\n            {isLoading ? (\n                < Loader />\n            ) : (\n\n            // )}\n\n            <span>\n\n                {/* <button className=\"collapsible1\">Close Map Menu</button> */}\n\n                {/* <div className=\"content1\"> */}\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"cases block\" value=\"cases\">Total Cases</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"casesPerOneMillion block\" value=\"casesPerOneMillion\">Total Cases Per Million</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"todayCases block\" value=\"todayCases\">New Cases Today</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"deaths block\" value=\"deaths\">Total Deaths</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"deathsPerOneMillion block\" value=\"deathsPerOneMillion\">Deaths Per Million</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"todayDeaths block\" value=\"todayDeaths\">New Deaths Today</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"activee block\" value=\"active\">Active Cases</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"activePerOneMillion block\" value=\"activePerOneMillion\">Active Cases Per Million</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"recoveredPerOneMillion block\" value=\"recoveredPerOneMillion\">Recovered Cases Per Million</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"critical block\" value=\"critical\">Critical Cases</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"criticalPerOneMillion block\" value=\"criticalPerOneMillion\">Critical Cases Per Million</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"tests block\" value=\"tests\">Number of Tests</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"testsPerOneMillion block\" value=\"testsPerOneMillion\">Tests Per Million</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"population block\" value=\"population\">Population</button>\n                    <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"reset block\" value=\"reset\">Reset Map</button>\n                {/* </div> */}\n\n            </span>\n\n            )}\n        </div>\n    )\n}\n\nexport default MapInput"]},"metadata":{},"sourceType":"module"}