{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Ginny 1/SSUI-Final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/Ginny 1/SSUI-Final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"/Users/Ginny 1/SSUI-Final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/Ginny 1/SSUI-Final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useSelector,useDispatch}from'react-redux';import{NavLink}from'react-router-dom';import\"./CountryDropdown.css\";import Delete from\"../img/delete.png\";var CountryDropdown=function CountryDropdown(props){var countries=useSelector(function(state){return state.countries;});var collection=useSelector(function(state){return state.collection;});var dispatch=useDispatch();var display=true;// Fetch specific country covid data based on user's choice in the select option\nvar fetchCountry=function fetchCountry(event){var _event$target$value$s=event.target.value.split(\",\"),_event$target$value$s2=_slicedToArray(_event$target$value$s,3),slug=_event$target$value$s2[0],country=_event$target$value$s2[1],ISO2=_event$target$value$s2[2];function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var requestOptions,response,data,parsedData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:requestOptions={method:'GET',redirect:'follow'};_context.next=3;return fetch(\"https://api.covid19api.com/total/country/\"+slug,requestOptions);case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;parsedData=data.filter(function(day){return day.Confirmed>0;});dispatch({type:'addCountryData',payload:_defineProperty({},country,parsedData)});dispatch({type:'addCountryToCollection',payload:{slug:slug,country:country,ISO2:ISO2}});case 10:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();};var invalid=function invalid(){return collection.length===0;};return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-12 col-md-6 col-lg-3\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"instruction\"},\" Select country to display: \"),/*#__PURE__*/React.createElement(\"select\",{class:\"dropdown\",onChange:function onChange(event){return fetchCountry(event);}},/*#__PURE__*/React.createElement(\"option\",{placeholder:\"Countries\"},\" Countries \"),countries.sort(function(a,b){return a.Country>b.Country?1:-1;}).map(function(country){return/*#__PURE__*/React.createElement(\"option\",{id:country.Slug,key:country.Slug,value:[country.Slug,country.Country,country.ISO2]},country.Country);})),/*#__PURE__*/React.createElement(NavLink,{to:\"/collection\"},/*#__PURE__*/React.createElement(\"button\",{className:\"dark\",disabled:invalid()},\"View side-by-side plot\")),/*#__PURE__*/React.createElement(\"button\",{className:\"dark\",disabled:invalid()},\" View overlay plot \")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-12 col-md-6 col-lg-9\"},/*#__PURE__*/React.createElement(\"div\",{className:\"countries\"},collection.map(function(country,index){var flagUrl=\"https://disease.sh/assets/img/flags/\".concat(country.ISO2.toLowerCase(),\".png\");// const flagUrl = `https://www.countryflags.io/${country.ISO2.toLowerCase()}/flat/64.png`\n// const flagUrl = `https://flagcdn.com/256x192/${country.ISO2.toLowerCase()}.png`\nvar worldUrl=\"https://freesvg.org/img/Globe-Icon-Umber.png\";return/*#__PURE__*/React.createElement(\"div\",{className:display?\"country\":\"none\"},/*#__PURE__*/React.createElement(\"img\",{className:\"flag\",key:country.slug,src:flagUrl,onError:function onError(e){if(e.target.src!==worldUrl){e.target.src=worldUrl;}}}),/*#__PURE__*/React.createElement(\"h5\",{className:\"countryName\"},country.country));}))));};export default CountryDropdown;","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/components/CountryDropdown.js"],"names":["React","useSelector","useDispatch","NavLink","Delete","CountryDropdown","props","countries","state","collection","dispatch","display","fetchCountry","event","target","value","split","slug","country","ISO2","fetchData","requestOptions","method","redirect","fetch","response","json","data","parsedData","filter","day","Confirmed","type","payload","invalid","length","sort","a","b","Country","map","Slug","index","flagUrl","toLowerCase","worldUrl","e","src"],"mappings":"+jBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAO,uBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAE/B,GAAMC,CAAAA,SAAS,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,SAAV,EAAN,CAA7B,CACA,GAAME,CAAAA,UAAU,CAAGR,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,UAAV,EAAN,CAA9B,CACA,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,GAAIS,CAAAA,OAAO,CAAG,IAAd,CAGJ;AACI,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,2BACEA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,GAAzB,CADF,gEACrBC,IADqB,2BACfC,OADe,2BACNC,IADM,mCAGbC,CAAAA,SAHa,qIAG5B,+KAEUC,cAFV,CAE2B,CACnBC,MAAM,CAAE,KADW,CAEnBC,QAAQ,CAAE,QAFS,CAF3B,uBAO2BC,CAAAA,KAAK,CAAC,4CAA8CP,IAA/C,CAAqDI,cAArD,CAPhC,QAOUI,QAPV,qCASuBA,CAAAA,QAAQ,CAACC,IAAT,EATvB,QASUC,IATV,eAUUC,UAVV,CAUuBD,IAAI,CAACE,MAAL,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,SAAJ,CAAgB,CAApB,EAAf,CAVvB,CAYIrB,QAAQ,CAAE,CAAEsB,IAAI,CAAE,gBAAR,CAA0BC,OAAO,oBAAKf,OAAL,CAAeU,UAAf,CAAjC,CAAF,CAAR,CACAlB,QAAQ,CAAE,CAAEsB,IAAI,CAAE,wBAAR,CAAkCC,OAAO,CAAE,CAAChB,IAAI,CAAJA,IAAD,CAAOC,OAAO,CAAPA,OAAP,CAAgBC,IAAI,CAAJA,IAAhB,CAA3C,CAAF,CAAR,CAbJ,uDAH4B,4CAkB5BC,SAAS,GACZ,CAnBD,CAqBA,GAAMc,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,SAAMzB,CAAAA,UAAU,CAAC0B,MAAX,GAAsB,CAA5B,EAAhB,CAEA,mBACI,2BAAK,SAAS,CAAC,KAAf,eACI,2BAAK,SAAS,CAAC,6BAAf,eAEI,0BAAI,SAAS,CAAC,aAAd,iCAFJ,cAII,8BAAQ,KAAK,CAAC,UAAd,CAAyB,QAAQ,CAAE,kBAAAtB,KAAK,QAAID,CAAAA,YAAY,CAACC,KAAD,CAAhB,EAAxC,eAEI,8BAAQ,WAAW,CAAC,WAApB,gBAFJ,CAGKN,SAAS,CAAC6B,IAAV,CAAe,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACE,OAAF,CAAYD,CAAC,CAACC,OAAf,CAA0B,CAA1B,CAA8B,CAAC,CAAzC,EAAf,EAA2DC,GAA3D,CAA+D,SAAAtB,OAAO,qBACnE,8BACI,EAAE,CAAEA,OAAO,CAACuB,IADhB,CAEI,GAAG,CAAEvB,OAAO,CAACuB,IAFjB,CAGI,KAAK,CAAE,CAACvB,OAAO,CAACuB,IAAT,CAAevB,OAAO,CAACqB,OAAvB,CAAgCrB,OAAO,CAACC,IAAxC,CAHX,EAKCD,OAAO,CAACqB,OALT,CADmE,EAAtE,CAHL,CAJJ,cAkBI,oBAAC,OAAD,EAAS,EAAE,CAAC,aAAZ,eACI,8BAAQ,SAAS,CAAC,MAAlB,CAAyB,QAAQ,CAAEL,OAAO,EAA1C,2BADJ,CAlBJ,cAsBI,8BAAQ,SAAS,CAAC,MAAlB,CAAyB,QAAQ,CAAEA,OAAO,EAA1C,wBAtBJ,CADJ,cA2BI,2BAAK,SAAS,CAAC,6BAAf,eACI,2BAAK,SAAS,CAAC,WAAf,EACCzB,UAAU,CAAC+B,GAAX,CAAgB,SAACtB,OAAD,CAAUwB,KAAV,CAAoB,CACjC,GAAMC,CAAAA,OAAO,+CAA0CzB,OAAO,CAACC,IAAR,CAAayB,WAAb,EAA1C,QAAb,CACA;AACA;AACA,GAAMC,CAAAA,QAAQ,+CAAd,CAEA,mBAEQ,2BAAK,SAAS,CAAElC,OAAO,CAAG,SAAH,CAAe,MAAtC,eACI,2BAAK,SAAS,CAAC,MAAf,CAAsB,GAAG,CAAEO,OAAO,CAACD,IAAnC,CAAyC,GAAG,CAAE0B,OAA9C,CAAuD,OAAO,CAAE,iBAACG,CAAD,CAAK,CACjE,GAAIA,CAAC,CAAChC,MAAF,CAASiC,GAAT,GAAiBF,QAArB,CAA+B,CAC3BC,CAAC,CAAChC,MAAF,CAASiC,GAAT,CAAaF,QAAb,CAAuB,CAC1B,CAHL,EADJ,cAKI,0BAAI,SAAS,CAAC,aAAd,EAA6B3B,OAAO,CAACA,OAArC,CALJ,CAFR,CAWH,CAjBA,CADD,CADJ,CA3BJ,CADJ,CAsDH,CAtFD,CAwFA,cAAeb,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { NavLink } from 'react-router-dom';\nimport \"./CountryDropdown.css\";\nimport Delete from \"../img/delete.png\";\n\nconst CountryDropdown = (props) => {\n\n    const countries = useSelector(state => state.countries)\n    const collection = useSelector(state => state.collection)\n    const dispatch = useDispatch()\n    let display = true;\n\n\n// Fetch specific country covid data based on user's choice in the select option\n    const fetchCountry = (event) => {\n        const [slug, country, ISO2] = event.target.value.split(\",\") \n\n        async function fetchData() {\n\n            const requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            \n            const response = await fetch(`https://api.covid19api.com/total/country/` + slug, requestOptions)\n\n            const data = await response.json()\n            const parsedData = data.filter(day => day.Confirmed > 0)\n\n            dispatch( { type: 'addCountryData', payload: { [country]: parsedData }} )\n            dispatch( { type: 'addCountryToCollection', payload: {slug, country, ISO2}} )\n        }\n        fetchData();\n    }\n\n    const invalid = () => collection.length === 0\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-lg-3\">\n\n                <h6 className=\"instruction\"> Select country to display: </h6>\n\n                <select class=\"dropdown\" onChange={event => fetchCountry(event)}>\n                \n                    <option placeholder=\"Countries\"> Countries </option>\n                    {countries.sort((a, b) => (a.Country > b.Country) ? 1 : -1).map(country => (\n                        <option\n                            id={country.Slug}\n                            key={country.Slug}\n                            value={[country.Slug, country.Country, country.ISO2]}\n                        >\n                        {country.Country}\n                        </option> \n                    ))}\n                </select>\n\n                <NavLink to='/collection'>\n                    <button className=\"dark\" disabled={invalid()}>View side-by-side plot</button>\n                </NavLink>\n\n                <button className=\"dark\" disabled={invalid()}> View overlay plot </button>\n                {/* <button className=\"dark\" disabled={invalid()} onClick={() => {display = false}}> Reset </button> */}\n            </div>\n\n            <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                <div className=\"countries\">\n                {collection.map( (country, index) => {\n                    const flagUrl = `https://disease.sh/assets/img/flags/${country.ISO2.toLowerCase()}.png`\n                    // const flagUrl = `https://www.countryflags.io/${country.ISO2.toLowerCase()}/flat/64.png`\n                    // const flagUrl = `https://flagcdn.com/256x192/${country.ISO2.toLowerCase()}.png`\n                    const worldUrl = `https://freesvg.org/img/Globe-Icon-Umber.png`\n\n                    return (\n\n                            <div className={display ? \"country\" : \"none\"}>\n                                <img className=\"flag\" key={country.slug} src={flagUrl} onError={(e)=>{ \n                                    if (e.target.src !== worldUrl) {\n                                        e.target.src=worldUrl;}\n                                    }}/>\n                                <h5 className=\"countryName\">{country.country}</h5>\n                                {/* <button className=\"delete\" onClick={() => {collection.splice(index, 1)}}> Delete </button> */}\n                            </div>\n                    )\n                })}\n                </div>\n            </div>\n\n            </div>\n\n    )\n}\n\nexport default CountryDropdown\n\n\n"]},"metadata":{},"sourceType":"module"}