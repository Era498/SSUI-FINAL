{"ast":null,"code":"var _jsxFileName = \"/Users/Ginny 1/SSUI-Final/src/components/Province.js\";\nimport React from 'react';\nimport Viz from '../d3/Viz';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Loader } from './Loader';\n\nconst Province = ({\n  caseType,\n  province,\n  provinceData\n}) => {\n  province ? province = province : province = provinceData[0].Country;\n  console.log(province);\n  console.log(provinceData);\n\n  const totalCases = () => provinceData.length === 0 ? 0 : provinceData[provinceData.length - 1].Confirmed;\n\n  const slug = province => {\n    return province.toString().trim().toLowerCase().replace(/\\s+/g, \"-\").replace(/[^\\w\\-]+/g, \"\").replace(/\\-\\-+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n  };\n\n  const array = [];\n\n  const parseData = (provinceData, array) => {\n    provinceData.forEach((day, index) => {\n      array.push({\n        dayCount: index + 1,\n        date: new Date(day.Date),\n        total: day.Confirmed,\n        active: day.Active,\n        recovered: day.Recovered,\n        deaths: day.Deaths\n      });\n    });\n    return array;\n  };\n\n  if (provinceData) {\n    return (\n      /*#__PURE__*/\n      // <NavLink to={{\n      //     pathname: `/countries/${slug}`,\n      //     slug\n      //     }}>\n      React.createElement(Viz, {\n        countryName: province,\n        totalCases: totalCases(),\n        dailyData: parseData(provinceData, array),\n        caseType: caseType,\n        slug: slug(province),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }) // </NavLink>\n\n    );\n  } else {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    });\n  }\n};\n\nexport default Province;","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/components/Province.js"],"names":["React","Viz","useSelector","NavLink","Loader","Province","caseType","province","provinceData","Country","console","log","totalCases","length","Confirmed","slug","toString","trim","toLowerCase","replace","array","parseData","forEach","day","index","push","dayCount","date","Date","total","active","Active","recovered","Recovered","deaths","Deaths"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAwC;AACrDD,EAAAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAd,GAAyBA,QAAQ,GAAGC,YAAY,CAAC,CAAD,CAAZ,CAAgBC,OAA5D;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AACA,QAAMI,UAAU,GAAG,MAAMJ,YAAY,CAACK,MAAb,KAAwB,CAAxB,GAA4B,CAA5B,GAAgCL,YAAY,CAACA,YAAY,CAACK,MAAb,GAAoB,CAArB,CAAZ,CAAoCC,SAA7F;;AACA,QAAMC,IAAI,GAAIR,QAAD,IAAc;AACvB,WAAOA,QAAQ,CACdS,QADM,GAENC,IAFM,GAGNC,WAHM,GAINC,OAJM,CAIE,MAJF,EAIU,GAJV,EAKNA,OALM,CAKE,WALF,EAKe,EALf,EAMNA,OANM,CAME,QANF,EAMY,GANZ,EAONA,OAPM,CAOE,KAPF,EAOS,EAPT,EAQNA,OARM,CAQE,KARF,EAQS,EART,CAAP;AASH,GAVD;;AAYI,QAAMC,KAAK,GAAG,EAAd;;AACA,QAAMC,SAAS,GAAG,CAACb,YAAD,EAAeY,KAAf,KAAyB;AACvCZ,IAAAA,YAAY,CAACc,OAAb,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClCJ,MAAAA,KAAK,CAACK,IAAN,CAAW;AACPC,QAAAA,QAAQ,EAAEF,KAAK,GAAG,CADX;AAEPG,QAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,GAAG,CAACK,IAAb,CAFC;AAGPC,QAAAA,KAAK,EAAEN,GAAG,CAACT,SAHJ;AAIPgB,QAAAA,MAAM,EAAEP,GAAG,CAACQ,MAJL;AAKPC,QAAAA,SAAS,EAAET,GAAG,CAACU,SALR;AAMPC,QAAAA,MAAM,EAAEX,GAAG,CAACY;AANL,OAAX;AAQH,KATD;AAUA,WAAOf,KAAP;AACH,GAZD;;AAcJ,MAAIZ,YAAJ,EAAkB;AAEd;AAAA;AACQ;AACA;AACA;AACA;AACI,0BAAC,GAAD;AAAK,QAAA,WAAW,EAAED,QAAlB;AAA4B,QAAA,UAAU,EAAEK,UAAU,EAAlD;AAAsD,QAAA,SAAS,EAAES,SAAS,CAACb,YAAD,EAAeY,KAAf,CAA1E;AAAiG,QAAA,QAAQ,EAAEd,QAA3G;AAAqH,QAAA,IAAI,EAAES,IAAI,CAACR,QAAD,CAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALZ,CAMQ;;AANR;AAQH,GAVD,MAUO;AACH,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CA7CD;;AA+CA,eAAeF,QAAf","sourcesContent":["import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { Loader } from './Loader'\n\nconst Province = ({caseType, province, provinceData}) => {\n    province ? province = province : province = provinceData[0].Country\n    console.log(province)\n    console.log(provinceData)\n    const totalCases = () => provinceData.length === 0 ? 0 : provinceData[provinceData.length-1].Confirmed\n    const slug = (province) => {\n        return province\n        .toString()\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w\\-]+/g, \"\")\n        .replace(/\\-\\-+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n    }\n\n        const array = []\n        const parseData = (provinceData, array) => {\n            provinceData.forEach( (day, index) => {\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths\n                })\n            })\n            return array\n        }\n\n    if (provinceData) {\n\n        return (\n                // <NavLink to={{\n                //     pathname: `/countries/${slug}`,\n                //     slug\n                //     }}>\n                    <Viz countryName={province} totalCases={totalCases()} dailyData={parseData(provinceData, array)} caseType={caseType} slug={slug(province)}/>\n                // </NavLink>\n        )\n    } else {\n        return <Loader />\n    }\n}\n\nexport default Province"]},"metadata":{},"sourceType":"module"}