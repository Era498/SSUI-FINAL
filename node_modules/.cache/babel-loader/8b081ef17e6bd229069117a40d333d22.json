{"ast":null,"code":"import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { color } from './Color';\n\nconst DrawLine = (names, data, slugs, caseType) => {\n  console.log(names);\n  console.log(data);\n  console.log(slugs);\n  caseType ? caseType = caseType : caseType = \"total\";\n  const width = 960;\n  const height = 500;\n  const padding = .2;\n  const margin = {\n    top: 80,\n    right: 0,\n    bottom: 80,\n    left: 80\n  };\n  const innerWidth = width - margin.left - margin.right;\n  const vizName = \"viz\";\n\n  function capFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const xAxisLabel = \"Number of Days\";\n  const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\";\n  const title = \"COVID-19 Cases\"; // const xScale = scaleBand()\n  //     .domain(dailyData.map(d => d.dayCount))\n  //     .range([margin.left, width - margin.right])\n  //     .padding(padding)\n  // const yScale = scaleLinear()\n  //     .domain([0, max(dailyData, d => d[`${caseType}`])])\n  //     .range([height - margin.bottom, margin.top])\n\n  const svg = select(`.${vizName}`).append(\"svg\").attr(\"preserveAspectRatio\", \"xMinYMid meet\").attr(\"viewBox\", [0, 0, width, height]);\n};\n\nexport default DrawLine;","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/d3/DrawLine.js"],"names":["max","scaleBand","scaleLinear","axisBottom","axisLeft","select","line","curveMonotoneX","color","DrawLine","names","data","slugs","caseType","console","log","width","height","padding","margin","top","right","bottom","left","innerWidth","vizName","capFirst","string","charAt","toUpperCase","slice","xAxisLabel","yAxisLabel","title","svg","append","attr"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,WAAzB,EAAsCC,UAAtC,EAAkDC,QAAlD,EAA4DC,MAA5D,QAA0E,IAA1E;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,UAArC;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAKA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,QAArB,KAAkC;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAd,GAAyBA,QAAQ,GAAG,OAA5C;AACA,QAAMG,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,MAAM,GAAI;AAACC,IAAAA,GAAG,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE,CAAjB;AAAoBC,IAAAA,MAAM,EAAE,EAA5B;AAAgCC,IAAAA,IAAI,EAAE;AAAtC,GAAhB;AACA,QAAMC,UAAU,GAAGR,KAAK,GAAGG,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAAhD;AACA,QAAMI,OAAO,GAAG,KAAhB;;AAGA,WAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACtB,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACH;;AAED,QAAMC,UAAU,GAAG,gBAAnB;AACA,QAAMC,UAAU,GAAGnB,QAAQ,GAAI,oBAAmBa,QAAQ,CAACb,QAAD,CAAW,EAA1C,GAA8C,iBAAzE;AACA,QAAMoB,KAAK,GAAG,gBAAd,CAnB+C,CAsB/C;AACA;AACA;AACA;AAGA;AACA;AACA;;AAKA,QAAMC,GAAG,GAAG7B,MAAM,CAAE,IAAGoB,OAAQ,EAAb,CAAN,CACXU,MADW,CACJ,KADI,EAEXC,IAFW,CAEN,qBAFM,EAEiB,eAFjB,EAGXA,IAHW,CAGN,SAHM,EAGK,CAAC,CAAD,EAAI,CAAJ,EAAOpB,KAAP,EAAcC,MAAd,CAHL,CAAZ;AAOH,CA1CD;;AA6CA,eAAeR,QAAf","sourcesContent":["import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { color } from './Color'\n\n\n\n\nconst DrawLine = (names, data, slugs, caseType) => {\n    console.log(names)\n    console.log(data)\n    console.log(slugs)\n    caseType ? caseType = caseType : caseType = \"total\";\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 0, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    const vizName = \"viz\"\n\n\n    function capFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\"\n    const title = \"COVID-19 Cases\"\n\n\n    // const xScale = scaleBand()\n    //     .domain(dailyData.map(d => d.dayCount))\n    //     .range([margin.left, width - margin.right])\n    //     .padding(padding)\n        \n\n    // const yScale = scaleLinear()\n    //     .domain([0, max(dailyData, d => d[`${caseType}`])])\n    //     .range([height - margin.bottom, margin.top])\n\n\n\n\n    const svg = select(`.${vizName}`)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n    .attr(\"viewBox\", [0, 0, width, height])\n\n\n\n}\n\n\nexport default DrawLine"]},"metadata":{},"sourceType":"module"}