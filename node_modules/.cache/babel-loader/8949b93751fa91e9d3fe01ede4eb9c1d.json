{"ast":null,"code":"var _jsxFileName = \"/Users/Ginny 1/SSUI-Final/src/components/CountryDropdown.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport \"./CountryDropdown.css\";\nimport Delete from \"../img/delete.png\";\n\nconst CountryDropdown = props => {\n  const countries = useSelector(state => state.countries);\n  const collection = useSelector(state => state.collection);\n  const dispatch = useDispatch();\n  let reset = false; // Fetch specific country covid data based on user's choice in the select option\n\n  const fetchCountry = event => {\n    const [slug, country, ISO2] = event.target.value.split(\",\");\n\n    async function fetchData() {\n      const requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n      const response = await fetch(`https://api.covid19api.com/total/country/` + slug, requestOptions);\n      const data = await response.json();\n      const parsedData = data.filter(day => day.Confirmed > 0);\n      dispatch({\n        type: 'addCountryData',\n        payload: {\n          [country]: parsedData\n        }\n      });\n      dispatch({\n        type: 'addCountryToCollection',\n        payload: {\n          slug,\n          country,\n          ISO2\n        }\n      });\n    }\n\n    fetchData();\n  };\n\n  const invalid = () => collection.length === 0;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 col-md-6 col-lg-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \" Choose the country you want to display\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => fetchCountry(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    placeholder: \"Countries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \" Countries \"), countries.sort((a, b) => a.Country > b.Country ? 1 : -1).map(country => /*#__PURE__*/React.createElement(\"option\", {\n    id: country.Slug,\n    key: country.Slug,\n    value: [country.Slug, country.Country, country.ISO2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, country.Country))), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"dark\",\n    disabled: invalid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"View plots side by side\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"dark\",\n    disabled: invalid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" View overlay plot \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"dark\",\n    disabled: invalid(),\n    onClick: reset = true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \" Reset \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 col-md-6 col-lg-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"countries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, collection.map((country, index) => {\n    const flagUrl = `https://disease.sh/assets/img/flags/${country.ISO2.toLowerCase()}.png`; // const flagUrl = `https://www.countryflags.io/${country.ISO2.toLowerCase()}/flat/64.png`\n    // const flagUrl = `https://flagcdn.com/256x192/${country.ISO2.toLowerCase()}.png`\n\n    const worldUrl = `https://freesvg.org/img/Globe-Icon-Umber.png`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"flag\",\n      key: country.slug,\n      src: flagUrl,\n      onError: e => {\n        if (e.target.src !== worldUrl) {\n          e.target.src = worldUrl;\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"countryName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, country.country));\n  }))));\n};\n\nexport default CountryDropdown;","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/components/CountryDropdown.js"],"names":["React","useSelector","useDispatch","NavLink","Delete","CountryDropdown","props","countries","state","collection","dispatch","reset","fetchCountry","event","slug","country","ISO2","target","value","split","fetchData","requestOptions","method","redirect","response","fetch","data","json","parsedData","filter","day","Confirmed","type","payload","invalid","length","sort","a","b","Country","map","Slug","index","flagUrl","toLowerCase","worldUrl","e","src"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { NavLink } from 'react-router-dom';\nimport \"./CountryDropdown.css\";\nimport Delete from \"../img/delete.png\";\n\nconst CountryDropdown = (props) => {\n\n    const countries = useSelector(state => state.countries)\n    const collection = useSelector(state => state.collection)\n    const dispatch = useDispatch()\n    let reset = false;\n\n\n// Fetch specific country covid data based on user's choice in the select option\n    const fetchCountry = (event) => {\n        const [slug, country, ISO2] = event.target.value.split(\",\") \n\n        async function fetchData() {\n\n            const requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            \n            const response = await fetch(`https://api.covid19api.com/total/country/` + slug, requestOptions)\n\n            const data = await response.json()\n            const parsedData = data.filter(day => day.Confirmed > 0)\n\n            dispatch( { type: 'addCountryData', payload: { [country]: parsedData }} )\n            dispatch( { type: 'addCountryToCollection', payload: {slug, country, ISO2}} )\n        }\n        fetchData();\n    }\n\n    const invalid = () => collection.length === 0\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-lg-3\">\n\n                <h6> Choose the country you want to display</h6>\n\n                <select onChange={event => fetchCountry(event)}>\n                \n                    <option placeholder=\"Countries\"> Countries </option>\n                    {countries.sort((a, b) => (a.Country > b.Country) ? 1 : -1).map(country => (\n                        <option\n                            id={country.Slug}\n                            key={country.Slug}\n                            value={[country.Slug, country.Country, country.ISO2]}\n                        >\n                        {country.Country}\n                        </option> \n                    ))}\n                </select>\n\n                <NavLink to='/collection'>\n                    <button className=\"dark\" disabled={invalid()}>View plots side by side</button>\n                </NavLink>\n\n                <button className=\"dark\" disabled={invalid()}> View overlay plot </button>\n                <button className=\"dark\" disabled={invalid()} onClick={reset = true}> Reset </button>\n            </div>\n\n            <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                <div className=\"countries\">\n                {collection.map( (country, index) => {\n                    const flagUrl = `https://disease.sh/assets/img/flags/${country.ISO2.toLowerCase()}.png`\n                    // const flagUrl = `https://www.countryflags.io/${country.ISO2.toLowerCase()}/flat/64.png`\n                    // const flagUrl = `https://flagcdn.com/256x192/${country.ISO2.toLowerCase()}.png`\n                    const worldUrl = `https://freesvg.org/img/Globe-Icon-Umber.png`\n\n                    return (\n\n                            <div className=\"country\">\n                                <img className=\"flag\" key={country.slug} src={flagUrl} onError={(e)=>{ \n                                    if (e.target.src !== worldUrl) {\n                                        e.target.src=worldUrl;}\n                                    }}/>\n                                <h5 className=\"countryName\">{country.country}</h5>\n                                {/* <button className=\"delete\" onClick={() => {collection.splice(index, 1)}}> Delete </button> */}\n                            </div>\n                    )\n                })}\n                </div>\n            </div>\n\n            </div>\n\n    )\n}\n\nexport default CountryDropdown\n\n\n"]},"metadata":{},"sourceType":"module"}