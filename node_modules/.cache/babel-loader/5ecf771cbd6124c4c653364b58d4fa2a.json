{"ast":null,"code":"var _jsxFileName = \"/Users/Ginny 1/SSUI-Final/src/components/Country.js\";\nimport React from 'react';\nimport Viz from '../d3/Viz';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nconst Country = ({\n  caseType,\n  country\n}) => {\n  const collection = useSelector(state => state.collection);\n  console.log(collection);\n  console.log(country);\n  const countryName = Object.keys(country)[0];\n  console.log(countryName);\n  const dailyData = country[countryName];\n  console.log(collection.find(obj => obj.country === countryName) == null);\n\n  if (collection.find(obj => obj.country === countryName) != null) {\n    console.log(\"hi\");\n  }\n\n  const slug = collection.find(obj => obj.country === countryName).slug;\n\n  const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length - 1].Confirmed;\n\n  const array = [];\n\n  const parseData = (data, array) => {\n    data.forEach((day, index) => {\n      array.push({\n        dayCount: index + 1,\n        date: new Date(day.Date),\n        total: day.Confirmed,\n        active: day.Active,\n        recovered: day.Recovered,\n        deaths: day.Deaths\n      });\n    });\n    return array;\n  };\n\n  return /*#__PURE__*/React.createElement(NavLink, {\n    to: {\n      pathname: `/countries/${slug}`,\n      slug\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Viz, {\n    countryName: countryName,\n    totalCases: totalCases(),\n    dailyData: parseData(dailyData, array),\n    caseType: caseType,\n    slug: slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Country;","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/components/Country.js"],"names":["React","Viz","useSelector","NavLink","Country","caseType","country","collection","state","console","log","countryName","Object","keys","dailyData","find","obj","slug","totalCases","length","Confirmed","array","parseData","data","forEach","day","index","push","dayCount","date","Date","total","active","Active","recovered","Recovered","deaths","Deaths","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AACrC,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAMK,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqB,CAArB,CAApB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACA,QAAMG,SAAS,GAAGR,OAAO,CAACK,WAAD,CAAzB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACQ,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACV,OAAJ,KAAgBK,WAAvC,KAAwD,IAApE;;AACA,MAAIJ,UAAU,CAACQ,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACV,OAAJ,KAAgBK,WAAvC,KAAuD,IAA3D,EAAiE;AAC7DF,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AACD,QAAMO,IAAI,GAAGV,UAAU,CAACQ,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACV,OAAJ,KAAgBK,WAAvC,EAAoDM,IAAjE;;AACA,QAAMC,UAAU,GAAG,MAAMJ,SAAS,CAACK,MAAV,KAAqB,CAArB,GAAyB,CAAzB,GAA6BL,SAAS,CAACA,SAAS,CAACK,MAAV,GAAiB,CAAlB,CAAT,CAA8BC,SAApF;;AAEA,QAAMC,KAAK,GAAG,EAAd;;AACA,QAAMC,SAAS,GAAG,CAACC,IAAD,EAAOF,KAAP,KAAiB;AAC/BE,IAAAA,IAAI,CAACC,OAAL,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1BL,MAAAA,KAAK,CAACM,IAAN,CAAW;AACPC,QAAAA,QAAQ,EAAEF,KAAK,GAAG,CADX;AAEPG,QAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,GAAG,CAACK,IAAb,CAFC;AAGPC,QAAAA,KAAK,EAAEN,GAAG,CAACL,SAHJ;AAIPY,QAAAA,MAAM,EAAEP,GAAG,CAACQ,MAJL;AAKPC,QAAAA,SAAS,EAAET,GAAG,CAACU,SALR;AAMPC,QAAAA,MAAM,EAAEX,GAAG,CAACY;AANL,OAAX;AAQH,KATD;AAUA,WAAOhB,KAAP;AACH,GAZD;;AAcA,sBACI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAE;AACTiB,MAAAA,QAAQ,EAAG,cAAarB,IAAK,EADpB;AAETA,MAAAA;AAFS,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,GAAD;AAAK,IAAA,WAAW,EAAEN,WAAlB;AAA+B,IAAA,UAAU,EAAEO,UAAU,EAArD;AAAyD,IAAA,SAAS,EAAEI,SAAS,CAACR,SAAD,EAAYO,KAAZ,CAA7E;AAAiG,IAAA,QAAQ,EAAEhB,QAA3G;AAAqH,IAAA,IAAI,EAAEY,IAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CArCD;;AAuCA,eAAeb,OAAf","sourcesContent":["import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\nconst Country = ({caseType, country}) => {\n    const collection = useSelector(state => state.collection)\n    console.log(collection)\n    console.log(country)\n    const countryName = Object.keys(country)[0]\n    console.log(countryName)\n    const dailyData = country[countryName]\n    console.log(collection.find(obj => obj.country === countryName)  == null)\n    if (collection.find(obj => obj.country === countryName) != null) {\n        console.log(\"hi\")\n    }\n    const slug = collection.find(obj => obj.country === countryName).slug\n    const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n\n    const array = []\n    const parseData = (data, array) => {\n        data.forEach( (day, index) => {\n            array.push({\n                dayCount: index + 1,\n                date: new Date(day.Date),\n                total: day.Confirmed, \n                active: day.Active, \n                recovered: day.Recovered, \n                deaths: day.Deaths\n            })\n        })\n        return array\n    }\n\n    return (\n        <NavLink to={{\n            pathname: `/countries/${slug}`,\n            slug\n            }}>\n            <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n        </NavLink>\n    )\n}\n\nexport default Country\n\n"]},"metadata":{},"sourceType":"module"}