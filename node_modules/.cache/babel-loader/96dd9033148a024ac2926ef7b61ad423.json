{"ast":null,"code":"import React from'react';import Viz from'../d3/Viz';import{useSelector}from'react-redux';import{NavLink}from'react-router-dom';var Country=function Country(_ref){var caseType=_ref.caseType,country=_ref.country;var collection=useSelector(function(state){return state.collection;});console.log(country);var countryName=Object.keys(country)[0];console.log(countryName);var dailyData=country[countryName];console.log(dailyData);// console.log(collection.find(obj => obj.country === countryName)  == null)\nconsole.log(collection.find(function(obj){return obj.country===countryName;})!=null);if(collection.find(function(obj){return obj.country===countryName;})!=null){console.log(\"hi\");var slug=collection.find(function(obj){return obj.country===countryName;}).slug;var totalCases=function totalCases(){return dailyData.length===0?0:dailyData[dailyData.length-1].Confirmed;};var array=[];var parseData=function parseData(data,array){data.forEach(function(day,index){array.push({dayCount:index+1,date:new Date(day.Date),total:day.Confirmed,active:day.Active,recovered:day.Recovered,deaths:day.Deaths});});console.log(array);return array;};return/*#__PURE__*/React.createElement(NavLink,{to:{pathname:\"/countries/\".concat(slug),slug:slug,countryName:countryName}},/*#__PURE__*/React.createElement(Viz,{countryName:countryName,totalCases:totalCases(),dailyData:parseData(dailyData,array),caseType:caseType,slug:slug}));}};export default Country;","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/components/Country.js"],"names":["React","Viz","useSelector","NavLink","Country","caseType","country","collection","state","console","log","countryName","Object","keys","dailyData","find","obj","slug","totalCases","length","Confirmed","array","parseData","data","forEach","day","index","push","dayCount","date","Date","total","active","Active","recovered","Recovered","deaths","Deaths","pathname"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,WAAhB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAyB,IAAvBC,CAAAA,QAAuB,MAAvBA,QAAuB,CAAbC,OAAa,MAAbA,OAAa,CACrC,GAAMC,CAAAA,UAAU,CAAGL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACD,UAAV,EAAN,CAA9B,CACAE,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EACA,GAAMK,CAAAA,WAAW,CAAGC,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqB,CAArB,CAApB,CACAG,OAAO,CAACC,GAAR,CAAYC,WAAZ,EACA,GAAMG,CAAAA,SAAS,CAAGR,OAAO,CAACK,WAAD,CAAzB,CACAF,OAAO,CAACC,GAAR,CAAYI,SAAZ,EACA;AACAL,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACQ,IAAX,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACV,OAAJ,GAAgBK,WAApB,EAAnB,GAAwD,IAApE,EACA,GAAIJ,UAAU,CAACQ,IAAX,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACV,OAAJ,GAAgBK,WAApB,EAAnB,GAAuD,IAA3D,CAAiE,CAC7DF,OAAO,CAACC,GAAR,CAAY,IAAZ,EACA,GAAMO,CAAAA,IAAI,CAAGV,UAAU,CAACQ,IAAX,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACV,OAAJ,GAAgBK,WAApB,EAAnB,EAAoDM,IAAjE,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMJ,CAAAA,SAAS,CAACK,MAAV,GAAqB,CAArB,CAAyB,CAAzB,CAA6BL,SAAS,CAACA,SAAS,CAACK,MAAV,CAAiB,CAAlB,CAAT,CAA8BC,SAAjE,EAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAOF,KAAP,CAAiB,CAC/BE,IAAI,CAACC,OAAL,CAAc,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC1BL,KAAK,CAACM,IAAN,CAAW,CACPC,QAAQ,CAAEF,KAAK,CAAG,CADX,CAEPG,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAASL,GAAG,CAACK,IAAb,CAFC,CAGPC,KAAK,CAAEN,GAAG,CAACL,SAHJ,CAIPY,MAAM,CAAEP,GAAG,CAACQ,MAJL,CAKPC,SAAS,CAAET,GAAG,CAACU,SALR,CAMPC,MAAM,CAAEX,GAAG,CAACY,MANL,CAAX,EAQH,CATD,EAUA5B,OAAO,CAACC,GAAR,CAAYW,KAAZ,EACA,MAAOA,CAAAA,KAAP,CACH,CAbD,CAeA,mBACI,oBAAC,OAAD,EAAS,EAAE,CAAE,CACTiB,QAAQ,sBAAgBrB,IAAhB,CADC,CAETA,IAAI,CAAJA,IAFS,CAGTN,WAAW,CAAXA,WAHS,CAAb,eAKI,oBAAC,GAAD,EAAK,WAAW,CAAEA,WAAlB,CAA+B,UAAU,CAAEO,UAAU,EAArD,CAAyD,SAAS,CAAEI,SAAS,CAACR,SAAD,CAAYO,KAAZ,CAA7E,CAAiG,QAAQ,CAAEhB,QAA3G,CAAqH,IAAI,CAAEY,IAA3H,EALJ,CADJ,CASH,CACJ,CAxCD,CA0CA,cAAeb,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\nconst Country = ({caseType, country}) => {\n    const collection = useSelector(state => state.collection)\n    console.log(country)\n    const countryName = Object.keys(country)[0]\n    console.log(countryName)\n    const dailyData = country[countryName]\n    console.log(dailyData)\n    // console.log(collection.find(obj => obj.country === countryName)  == null)\n    console.log(collection.find(obj => obj.country === countryName)  != null)\n    if (collection.find(obj => obj.country === countryName) != null) {\n        console.log(\"hi\")\n        const slug = collection.find(obj => obj.country === countryName).slug\n        const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n    \n        const array = []\n        const parseData = (data, array) => {\n            data.forEach( (day, index) => {\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths\n                })\n            })\n            console.log(array);\n            return array\n        }\n    \n        return (\n            <NavLink to={{\n                pathname: `/countries/${slug}`,\n                slug,\n                countryName\n                }}>\n                <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n            </NavLink>\n        )\n    }\n}\n\nexport default Country\n\n"]},"metadata":{},"sourceType":"module"}