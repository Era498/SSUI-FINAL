{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/Ginny 1/SSUI-Final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import React from'react';import Viz from'../d3/Viz';var State=function State(_ref){var caseType=_ref.caseType,state=_ref.state,stateData=_ref.stateData,countryName=_ref.countryName;state?state=state:state=countryName;var slug=function slug(state){return state.toString().trim().toLowerCase().replace(/\\s+/g,\"-\").replace(/[^\\w\\-]+/g,\"\").replace(/\\-\\-+/g,\"-\").replace(/^-+/,\"\").replace(/-+$/,\"\");};// need to refactor to merge entries for each day\nvar array=[];var parseData=function parseData(stateData,array){stateData.forEach(function(day){var date=day.Date.substring(0,10);if(!array.includes(date)){array.push(date);}});var dateArray=array.map(function(date){return stateData.filter(function(day){return day.Date.substring(0,10)===date;});});var parsedData=dateArray.map(function(d,index){var dayCount=index+1;var date=new Date(d[0].Date);var total=function total(){var sum=0;var _iterator=_createForOfIteratorHelper(d),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var element=_step.value;sum+=element.Confirmed;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return sum;};var active=function active(){var sum=0;var _iterator2=_createForOfIteratorHelper(d),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var element=_step2.value;sum+=element.Active;}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return sum;};var recovered=function recovered(){var sum=0;var _iterator3=_createForOfIteratorHelper(d),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var element=_step3.value;sum+=element.Recovered;}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return sum;};var deaths=function deaths(){var sum=0;var _iterator4=_createForOfIteratorHelper(d),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var element=_step4.value;sum+=element.Deaths;}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}return sum;};return{dayCount:dayCount,date:date,total:total(),active:active(),recovered:recovered(),deaths:deaths()};});return parsedData;};var dailyData=parseData(stateData,array);var totalCases=dailyData[dailyData.length-1].total;return/*#__PURE__*/React.createElement(Viz,{countryName:state,totalCases:totalCases,dailyData:dailyData,caseType:caseType,slug:slug(state)});};export default State;// <NavLink to={{\n//     pathname: `/countries/${slug}`,\n//     slug\n//     }}>\n// </NavLink>","map":{"version":3,"sources":["/Users/Ginny 1/SSUI-Final/src/components/State.js"],"names":["React","Viz","State","caseType","state","stateData","countryName","slug","toString","trim","toLowerCase","replace","array","parseData","forEach","day","date","Date","substring","includes","push","dateArray","map","filter","parsedData","d","index","dayCount","total","sum","element","Confirmed","active","Active","recovered","Recovered","deaths","Deaths","dailyData","totalCases","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Viz from '../d3/Viz'\n\nconst State = ({caseType, state, stateData, countryName}) => {\n    state ? state = state : state = countryName\n\n    const slug = (state) => {\n        return state\n        .toString()\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w\\-]+/g, \"\")\n        .replace(/\\-\\-+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n    }\n\n\n    // need to refactor to merge entries for each day\n        const array = []\n        const parseData = (stateData, array) => {\n            stateData.forEach( day => {\n                const date = day.Date.substring(0, 10)\n                if (!array.includes(date)) {\n                    array.push(date)\n                }\n            })\n\n            const dateArray = array.map(date => stateData.filter(day =>  day.Date.substring(0,10) === date))\n\n            const parsedData = dateArray.map( (d, index) => {\n                const dayCount = index + 1\n                const date = new Date(d[0].Date)\n\n                const total = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Confirmed\n                    }\n                    return sum\n                }\n\n                const active = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Active\n                    }\n                    return sum\n                }\n\n                const recovered = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Recovered\n                    }\n                    return sum\n                }\n\n                const deaths = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Deaths\n                    }\n                    return sum\n                }\n\n                return {dayCount, date, total: total(), active: active(), recovered: recovered(), deaths: deaths()}\n            })\n            return parsedData\n        }\n\n        const dailyData = parseData(stateData, array)\n        const totalCases = dailyData[dailyData.length - 1].total\n\n        return (\n            <Viz countryName={state} totalCases={totalCases} dailyData={dailyData} caseType={caseType} slug={slug(state)}/>\n        )\n}\n\nexport default State\n\n\n    // <NavLink to={{\n    //     pathname: `/countries/${slug}`,\n    //     slug\n    //     }}>\n    // </NavLink>"]},"metadata":{},"sourceType":"module"}