{"ast":null,"code":"var _jsxFileName = \"/Users/Ginny 1/covid19_world_tracker_frontend/src/components/State.js\";\nimport React from 'react';\nimport Viz from '../d3/Viz';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { active } from 'd3';\n\nconst State = ({\n  caseType,\n  state,\n  stateData,\n  countryName\n}) => {\n  state ? state = state : state = countryName;\n\n  const slug = state => {\n    return state.toString().trim().toLowerCase().replace(/\\s+/g, \"-\").replace(/[^\\w\\-]+/g, \"\").replace(/\\-\\-+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n  }; // need to refactor to merge entries for each day\n\n\n  const array = [];\n\n  const parseData = (stateData, array) => {\n    stateData.forEach(day => {\n      const date = day.Date.substring(0, 10);\n\n      if (!array.includes(date)) {\n        array.push(date);\n      }\n    });\n    const dateArray = array.map(date => stateData.filter(day => day.Date.substring(0, 10) === date));\n    const parsedData = dateArray.map((d, index) => {\n      const dayCount = index + 1;\n      const date = new Date(d[0].Date);\n\n      const total = () => {\n        let sum = 0;\n\n        for (let element of d) {\n          sum += element.Confirmed;\n        }\n\n        return sum;\n      };\n\n      const active = () => {\n        let sum = 0;\n\n        for (let element of d) {\n          sum += element.Active;\n        }\n\n        return sum;\n      };\n\n      const recovered = () => {\n        let sum = 0;\n\n        for (let element of d) {\n          sum += element.Recovered;\n        }\n\n        return sum;\n      };\n\n      const deaths = () => {\n        let sum = 0;\n\n        for (let element of d) {\n          sum += element.Deaths;\n        }\n\n        return sum;\n      };\n\n      return {\n        dayCount,\n        date,\n        total: total(),\n        active: active(),\n        recovered: recovered(),\n        deaths: deaths()\n      };\n    });\n    return parsedData;\n  };\n\n  const dailyData = parseData(stateData, array);\n  const totalCases = dailyData[dailyData.length - 1].total;\n  return /*#__PURE__*/React.createElement(Viz, {\n    countryName: state,\n    totalCases: totalCases,\n    dailyData: dailyData,\n    caseType: caseType,\n    slug: slug(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  });\n};\n\nexport default State; // <NavLink to={{\n//     pathname: `/countries/${slug}`,\n//     slug\n//     }}>\n// </NavLink>","map":{"version":3,"sources":["/Users/Ginny 1/covid19_world_tracker_frontend/src/components/State.js"],"names":["React","Viz","useSelector","NavLink","Loader","active","State","caseType","state","stateData","countryName","slug","toString","trim","toLowerCase","replace","array","parseData","forEach","day","date","Date","substring","includes","push","dateArray","map","filter","parsedData","d","index","dayCount","total","sum","element","Confirmed","Active","recovered","Recovered","deaths","Deaths","dailyData","totalCases","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { Loader } from './Loader'\nimport { active } from 'd3';\n\nconst State = ({caseType, state, stateData, countryName}) => {\n    state ? state = state : state = countryName\n\n    const slug = (state) => {\n        return state\n        .toString()\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w\\-]+/g, \"\")\n        .replace(/\\-\\-+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n    }\n\n\n    // need to refactor to merge entries for each day\n        const array = []\n        const parseData = (stateData, array) => {\n            stateData.forEach( day => {\n                const date = day.Date.substring(0, 10)\n                if (!array.includes(date)) {\n                    array.push(date)\n                }\n            })\n\n            const dateArray = array.map(date => stateData.filter(day =>  day.Date.substring(0,10) === date))\n\n            const parsedData = dateArray.map( (d, index) => {\n                const dayCount = index + 1\n                const date = new Date(d[0].Date)\n\n                const total = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Confirmed\n                    }\n                    return sum\n                }\n\n                const active = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Active\n                    }\n                    return sum\n                }\n\n                const recovered = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Recovered\n                    }\n                    return sum\n                }\n\n                const deaths = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Deaths\n                    }\n                    return sum\n                }\n\n                return {dayCount, date, total: total(), active: active(), recovered: recovered(), deaths: deaths()}\n            })\n            return parsedData\n        }\n\n        const dailyData = parseData(stateData, array)\n        const totalCases = dailyData[dailyData.length - 1].total\n\n        return (\n            <Viz countryName={state} totalCases={totalCases} dailyData={dailyData} caseType={caseType} slug={slug(state)}/>\n        )\n}\n\nexport default State\n\n\n    // <NavLink to={{\n    //     pathname: `/countries/${slug}`,\n    //     slug\n    //     }}>\n    // </NavLink>"]},"metadata":{},"sourceType":"module"}