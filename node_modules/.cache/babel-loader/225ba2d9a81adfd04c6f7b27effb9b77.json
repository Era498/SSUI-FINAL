{"ast":null,"code":"import React from'react';import Visual from'../d3/Visual';import{useSelector}from'react-redux';import{NavLink}from'react-router-dom';var Countries=function Countries(_ref){var caseType=_ref.caseType,countries=_ref.countries;var collection=useSelector(function(state){return state.collection;});var res=[];var slug_res=[];var names=[];countries.map(function(country,idx){var countryName=Object.keys(country)[0];var dailyData=country[countryName];var slug=collection.find(function(obj){return obj.country===countryName;}).slug;var array=[];var parseData=function parseData(data,array){data.forEach(function(day,index){var newCases=0;var newDeaths=0;if(index===0){newCases=0;newDeaths=0;}else{newCases=day.Confirmed-data[index-1].Confirmed;newDeaths=day.Deaths-data[index-1].Deaths;}array.push({dayCount:index+1,date:new Date(day.Date),total:day.Confirmed,active:day.Active,recovered:day.Recovered,deaths:day.Deaths,daily:newCases,daily_deaths:newDeaths});});console.log(array);return array;};res.push(parseData(dailyData,array));slug_res.push(slug);names.push(countryName);});console.log(res);console.log(slug_res);return/*#__PURE__*/React.createElement(Visual,{names:names,data:res,caseType:caseType,slugs:slug_res});// const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n// return (\n//     <NavLink to={{\n//         pathname: `/countries/${slug}`,\n//         slug,\n//         countryName\n//         }}>\n//         <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n//     </NavLink>\n// )\n};export default Countries;","map":{"version":3,"sources":["/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Countries.js"],"names":["React","Visual","useSelector","NavLink","Countries","caseType","countries","collection","state","res","slug_res","names","map","country","idx","countryName","Object","keys","dailyData","slug","find","obj","array","parseData","data","forEach","day","index","newCases","newDeaths","Confirmed","Deaths","push","dayCount","date","Date","total","active","Active","recovered","Recovered","deaths","daily","daily_deaths","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA2B,IAAzBC,CAAAA,QAAyB,MAAzBA,QAAyB,CAAfC,SAAe,MAAfA,SAAe,CACzC,GAAMC,CAAAA,UAAU,CAAGL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACD,UAAV,EAAN,CAA9B,CACA,GAAME,CAAAA,GAAG,CAAI,EAAb,CACA,GAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACA,GAAMC,CAAAA,KAAK,CAAG,EAAd,CAGAL,SAAS,CAACM,GAAV,CAAc,SAACC,OAAD,CAAUC,GAAV,CAAkB,CAC5B,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB,CAArB,CAApB,CACA,GAAMK,CAAAA,SAAS,CAAGL,OAAO,CAACE,WAAD,CAAzB,CACA,GAAMI,CAAAA,IAAI,CAAGZ,UAAU,CAACa,IAAX,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACR,OAAJ,GAAgBE,WAApB,EAAnB,EAAoDI,IAAjE,CAEA,GAAMG,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAOF,KAAP,CAAiB,CAC/BE,IAAI,CAACC,OAAL,CAAc,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC1B,GAAIC,CAAAA,QAAQ,CAAG,CAAf,CACA,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CACA,GAAIF,KAAK,GAAK,CAAd,CAAiB,CACbC,QAAQ,CAAG,CAAX,CACAC,SAAS,CAAG,CAAZ,CACH,CAHD,IAGO,CACHD,QAAQ,CAAGF,GAAG,CAACI,SAAJ,CAAgBN,IAAI,CAACG,KAAK,CAAC,CAAP,CAAJ,CAAcG,SAAzC,CACAD,SAAS,CAAGH,GAAG,CAACK,MAAJ,CAAaP,IAAI,CAACG,KAAK,CAAC,CAAP,CAAJ,CAAcI,MAAvC,CAEH,CACDT,KAAK,CAACU,IAAN,CAAW,CACPC,QAAQ,CAAEN,KAAK,CAAG,CADX,CAEPO,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAAST,GAAG,CAACS,IAAb,CAFC,CAGPC,KAAK,CAAEV,GAAG,CAACI,SAHJ,CAIPO,MAAM,CAAEX,GAAG,CAACY,MAJL,CAKPC,SAAS,CAAEb,GAAG,CAACc,SALR,CAMPC,MAAM,CAAEf,GAAG,CAACK,MANL,CAOPW,KAAK,CAAEd,QAPA,CAQPe,YAAY,CAAEd,SARP,CAAX,EAUH,CArBD,EAsBAe,OAAO,CAACC,GAAR,CAAYvB,KAAZ,EACA,MAAOA,CAAAA,KAAP,CACH,CAzBD,CA0BAb,GAAG,CAACuB,IAAJ,CAAST,SAAS,CAACL,SAAD,CAAYI,KAAZ,CAAlB,EACAZ,QAAQ,CAACsB,IAAT,CAAcb,IAAd,EACAR,KAAK,CAACqB,IAAN,CAAWjB,WAAX,EACH,CAnCD,EAqCA6B,OAAO,CAACC,GAAR,CAAYpC,GAAZ,EACAmC,OAAO,CAACC,GAAR,CAAYnC,QAAZ,EAEA,mBACI,oBAAC,MAAD,EAAQ,KAAK,CAAIC,KAAjB,CAAwB,IAAI,CAAIF,GAAhC,CAAqC,QAAQ,CAAIJ,QAAjD,CAA2D,KAAK,CAAIK,QAApE,EADJ,CAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAhED,CAkEA,cAAeN,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport Visual from '../d3/Visual'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\nconst Countries = ({caseType, countries}) => {\n    const collection = useSelector(state => state.collection)\n    const res =  []\n    const slug_res = []\n    const names = []\n\n\n    countries.map((country, idx) => {\n        const countryName = Object.keys(country)[0]\n        const dailyData = country[countryName]       \n        const slug = collection.find(obj => obj.country === countryName).slug\n\n        const array = []\n        const parseData = (data, array) => {\n            data.forEach( (day, index) => {\n                let newCases = 0;\n                let newDeaths = 0;\n                if (index === 0) {\n                    newCases = 0;\n                    newDeaths = 0;\n                } else {\n                    newCases = day.Confirmed - data[index-1].Confirmed;\n                    newDeaths = day.Deaths - data[index-1].Deaths;\n\n                }\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths,\n                    daily: newCases,\n                    daily_deaths: newDeaths,\n                })\n            })\n            console.log(array);\n            return array\n        }\n        res.push(parseData(dailyData, array));\n        slug_res.push(slug);\n        names.push(countryName);\n    })\n\n    console.log(res)\n    console.log(slug_res)\n\n    return (\n        <Visual names = {names} data = {res} caseType = {caseType} slugs = {slug_res}/>\n    )\n\n    // const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n\n    \n\n    // return (\n    //     <NavLink to={{\n    //         pathname: `/countries/${slug}`,\n    //         slug,\n    //         countryName\n    //         }}>\n    //         <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n    //     </NavLink>\n    // )\n}\n\nexport default Countries\n\n"]},"metadata":{},"sourceType":"module"}